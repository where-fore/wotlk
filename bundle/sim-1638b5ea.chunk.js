import{ca as t,T as n,cb as e,cc as a,cd as o,ce as i,cf as l,cg as s,ch as r,ci as m,A as h,cj as d,ck as g,B as c,aq as u,ar as p,t as f,c1 as y,Q as b,u as T,cl as S,cm as R,by as C,bz as E,L as w,bG as D,bJ as v,bL as P,bE as W,bK as A,bt as B,d as G,a6 as O,a as I,ao as F,a$ as H,al as N,K as U,ap as k}from"./detailed_results-f35d3fd3.chunk.js";import{i as M,j,c as z,b as x,a as J,k as K,l as _,B as q,I as L,n as V,o as Q,p as $,q as X,r as Y,s as Z,T as tt,t as nt}from"./individual_sim_ui-25bc03c1.chunk.js";const et=M({fieldName:"unholyFrenzyTarget",label:"Self Unholy Frenzy",labelTooltip:"Cast Unholy Frenzy on yourself.",extraCssClasses:["within-raid-sim-hide"],getValue:t=>t.getSpecOptions().unholyFrenzyTarget?.targetIndex!=u,setValue:(t,n,e)=>{const a=n.getSpecOptions();a.unholyFrenzyTarget=p.create({targetIndex:e?0:u}),n.setSpecOptions(t,a)},showWhen:t=>t.getTalents().hysteria,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),at=j({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),ot=j({fieldName:"petUptime",label:"Ghoul Uptime (%)",labelTooltip:"Percent of the fight duration for which your ghoul will be on target.",percent:!0,showWhen:t=>t.getTalents().masterOfGhouls}),it=M({fieldName:"precastGhoulFrenzy",label:"Pre-Cast Ghoul Frenzy",labelTooltip:"Cast Ghoul Frenzy 10 seconds before combat starts.",showWhen:t=>t.getTalents().summonGargoyle&&t.getTalents().ghoulFrenzy,changeEmitter:t=>n.onAny([t.specOptionsChangeEmitter,t.rotationChangeEmitter,t.talentsChangeEmitter])}),lt=M({fieldName:"precastHornOfWinter",label:"Pre-Cast Horn of Winter",labelTooltip:"Precast Horn of Winter for 10 extra runic power before fight."}),st=M({fieldName:"drwPestiApply",label:"DRW Pestilence Add",labelTooltip:"There is currently an interaction with DRW and pestilence where you can use pestilence to force DRW to apply diseases if they are already applied by the DK. It only works with Glyph of Disease and if there is an off target. This toggle forces the sim to assume there is an off target.",showWhen:t=>!t.getRotation().autoRotation&&0==t.getTalentTree()&&(t.getGlyphs().major1==f.GlyphOfDisease||t.getGlyphs().major2==f.GlyphOfDisease||t.getGlyphs().major3==f.GlyphOfDisease),changeEmitter:t=>n.onAny([t.specOptionsChangeEmitter,t.rotationChangeEmitter,t.talentsChangeEmitter])});z({fieldName:"diseaseRefreshDuration",label:"Disease Refresh Duration",labelTooltip:"Minimum duration for refreshing a disease."});const rt=x({fieldName:"useDeathAndDecay",label:"Death and Decay",labelTooltip:"Use Death and Decay based rotation.",showWhen:t=>t.getTalents().summonGargoyle&&t.getTalents().scourgeStrike&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])});J({fieldName:"deathAndDecayPrio",label:"Death and Decay Prio",labelTooltip:"<p>Chose how to prioritize death and decay usage:</p>\t\t<p><b>Max Rune Downtime</b>: Prioritizes spending runes over holding them for death and decay</p>\t\t<p><b>Max Dnd Uptime</b>: Prioritizes dnd uptime and can hold runes for longer then rune grace</p>",values:[{name:"Max Rune Downtime",value:t.MaxRuneDowntime},{name:"Max Dnd Uptime",value:t.MaxDndUptime}],showWhen:t=>t.getTalents().summonGargoyle&&(t.getRotation().useDeathAndDecay||!t.getTalents().scourgeStrike)&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])});const mt=x({fieldName:"useEmpowerRuneWeapon",label:"Empower Rune Weapon",labelTooltip:"Use Empower Rune Weapon in rotation.",showWhen:t=>!t.getRotation().autoRotation&&0!=t.getTalentTree()&&t.getRotation().frostRotationType!=g.Custom}),ht=x({fieldName:"useGargoyle",label:"Summon Gargoyle",labelTooltip:"Use Summon Gargoyle in rotation.",changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation}),dt=x({fieldName:"holdErwArmy",label:"Hold ERW for AotD",labelTooltip:"Hold Empower Rune Weapon for after Summon Gargoyle to guarantee maximized snapshot for Army of the Dead.",changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>!t.getRotation().autoRotation&&t.getRotation().useEmpowerRuneWeapon&&t.getRotation().armyOfTheDead==o.AsMajorCd&&0!=t.getTalentTree()}),gt=J({fieldName:"blPresence",label:"Bloodlust Presence",labelTooltip:"Presence during bloodlust.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ct=J({fieldName:"gargoylePresence",label:"Gargoyle Presence",labelTooltip:"Presence during Gargoyle.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation&&!t.getRotation().preNerfedGargoyle,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ut=x({fieldName:"btGhoulFrenzy",label:"BT Ghoul Frenzy",labelTooltip:"Use Ghoul Frenzy only with Blood Tap.",showWhen:t=>t.getTalents().ghoulFrenzy&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),pt=J({fieldName:"firstDisease",label:"First Disease",labelTooltip:"Chose which disease to apply first.",values:[{name:"Frost Fever",value:a.FrostFever},{name:"Blood Plague",value:a.BloodPlague}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ft=J({fieldName:"armyOfTheDead",label:"Army of the Dead",labelTooltip:"Chose how to use Army of the Dead.",values:[{name:"Do not use",value:o.DoNotUse},{name:"Pre pull",value:o.PreCast},{name:"As Major CD",value:o.AsMajorCd}],showWhen:t=>!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),yt=J({fieldName:"startingPresence",label:"Starting Presence",labelTooltip:"Chose the presence you start combat in.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),bt=J({fieldName:"presence",label:"Fight Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Tt=J({fieldName:"bloodRuneFiller",label:"Blood Rune Filler",labelTooltip:"Chose what to spend your free blood runes on.",values:[{name:"Blood Strike",value:i.BloodStrike},{name:"Blood Boil",value:i.BloodBoil}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),St=x({fieldName:"preNerfedGargoyle",label:"Pre-Nerfed Gargoyle (haste snapshot)",labelTooltip:"Use old Gargoyle that snapshots haste",showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation&&t.sim.getShowExperimental(),changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Rt=J({fieldName:"bloodTap",label:"Blood Tap",labelTooltip:"Chose what to spend your Blood Tap on.",values:[{name:"Ghoul Frenzy",value:l.GhoulFrenzy},{name:"Icy Touch",value:l.IcyTouch},{name:"Blood Strike",value:l.BloodStrikeBT},{name:"Blood Boil",value:l.BloodBoilBT}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Ct=x({fieldName:"useAms",label:"Use AMS",labelTooltip:"Use AMS around predicted damage for a RP gain.",showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation&&t.getRotation().frostRotationType!=g.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Et=z({fieldName:"avgAmsSuccessRate",label:"Avg AMS Success %",labelTooltip:"Chance for damage to be taken during the 5 second window of AMS.",showWhen:t=>1==t.getRotation().useAms&&!t.getRotation().autoRotation&&t.getTalents().howlingBlast&&t.getRotation().frostRotationType!=g.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),wt=z({fieldName:"avgAmsHit",label:"Avg AMS Hit",labelTooltip:"How much on average (+-10%) the character is hit for when AMS is successful.",showWhen:t=>1==t.getRotation().useAms&&!t.getRotation().autoRotation&&t.getTalents().howlingBlast&&t.getRotation().frostRotationType!=g.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Dt=x({fieldName:"autoRotation",label:"Automatic Rotation",labelTooltip:"Have sim automatically adjust rotation based on the scenario. This is still in development and currently only works for Unholy.",changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>!t.getTalents().howlingBlast}),vt=x({fieldName:"desyncRotation",label:"Use Desync Rotation",labelTooltip:"Use the Desync Rotation.",showWhen:t=>t.getTalents().howlingBlast&&!t.getTalents().epidemic&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Pt=J({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:e.Blood},{name:"Frost",value:e.Frost},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Wt=J({fieldName:"bloodSpender",label:"Blood Spender",labelTooltip:"Chose how to use Blood Runes.",values:[{name:"Heart Strike",value:s.HS},{name:"Blood Boil",value:s.BB},{name:"Blood Strike",value:s.BS}],showWhen:t=>!t.getRotation().autoRotation&&0==t.getTalentTree(),changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),At=x({fieldName:"useDancingRuneWeapon",label:"Dancing Rune Weapon",labelTooltip:"Use Dancing Rune Weapon.",showWhen:t=>t.getTalents().dancingRuneWeapon&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Bt=J({fieldName:"drwDiseases",label:"DRW Disease",labelTooltip:"Chose how to apply diseases for Dancing Rune Weapon.",values:[{name:"Do not apply",value:r.DoNotApply},{name:"IT + PS",value:r.Normal},{name:"Pestilence",value:r.Pestilence}],showWhen:t=>t.getRotation().useDancingRuneWeapon&&!t.getRotation().autoRotation&&t.getTalents().dancingRuneWeapon&&t.getRotation().bloodOpener==m.Standard,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])});J({fieldName:"bloodOpener",label:"Opener",labelTooltip:"Chose which opener to use.",values:[{name:"Standard",value:m.Standard},{name:"Incan",value:m.Experimental_1}],showWhen:t=>!t.getRotation().autoRotation&&0==t.getTalentTree(),changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])});const Gt=K({fieldName:"frostCustomRotation",numColumns:4,values:[{actionId:h.fromSpellId(49909),value:d.CustomIcyTouch},{actionId:h.fromSpellId(49921),value:d.CustomPlagueStrike},{actionId:h.fromSpellId(50842),value:d.CustomPestilence},{actionId:h.fromSpellId(51425),value:d.CustomObliterate},{actionId:h.fromSpellId(51411),value:d.CustomHowlingBlast},{actionId:h.fromSpellId(59057),value:d.CustomHowlingBlastRime},{actionId:h.fromSpellId(49941),value:d.CustomBloodBoil},{actionId:h.fromSpellId(49930),value:d.CustomBloodStrike},{actionId:h.fromSpellId(49938),value:d.CustomDeathAndDecay},{actionId:h.fromSpellId(57623),value:d.CustomHornOfWinter},{actionId:h.fromSpellId(51271),value:d.CustomUnbreakableArmor},{actionId:h.fromSpellId(45529),value:d.CustomBloodTap},{actionId:h.fromSpellId(47568),value:d.CustomEmpoweredRuneWeapon},{actionId:h.fromSpellId(55268),value:d.CustomFrostStrike}],showWhen:t=>t.getRotation().frostRotationType==g.Custom}),Ot=x({fieldName:"enableWeaponSwap",label:"Enable Weapon Swapping",showWhen:t=>t.getTalents().summonGargoyle&&t.getRotation().useGargoyle}),It=_({fieldName:"weaponSwap",values:[c.ItemSlotMainHand,c.ItemSlotOffHand],labelTooltip:"<b>Berserking</b> will be equipped when FC has procced and Berserking is not active.<br><br><b>Black Magic</b> will be prioed to swap during gargoyle or if gargoyle will be on CD for full BM Icd.",showWhen:t=>t.getTalents().summonGargoyle&&t.getRotation().useGargoyle&&t.getRotation().enableWeaponSwap}),Ft={inputs:[J({fieldName:"frostRotationType",label:"Rotation Type",values:[{name:"Single Target",value:g.SingleTarget},{name:"Custom",value:g.Custom}],changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation}),Pt,Dt,ut,ht,Ot,It,mt,At,dt,Rt,Wt,ft,Bt,pt,yt,ct,gt,bt,Tt,rt,Ct,Et,wt,vt,Gt,St]},Ht={name:"Frost BL",data:y.create({talentsString:"23050005-32005350352203012300033101351",glyphs:b.create({major1:f.GlyphOfObliterate,major2:f.GlyphOfFrostStrike,major3:f.GlyphOfDisease,minor1:T.GlyphOfHornOfWinter,minor2:T.GlyphOfPestilence,minor3:T.GlyphOfRaiseDead})})},Nt={name:"Frost UH",data:y.create({talentsString:"01-32002350342203012300033101351-230200305003",glyphs:b.create({major1:f.GlyphOfObliterate,major2:f.GlyphOfFrostStrike,major3:f.GlyphOfDisease,minor1:T.GlyphOfHornOfWinter,minor2:T.GlyphOfPestilence,minor3:T.GlyphOfRaiseDead})})},Ut={name:"Unholy DW",data:y.create({talentsString:"-320043500002-2300303050032152000150013133051",glyphs:b.create({major1:f.GlyphOfTheGhoul,major2:f.GlyphOfDarkDeath,major3:f.GlyphOfDeathAndDecay,minor1:T.GlyphOfHornOfWinter,minor2:T.GlyphOfPestilence,minor3:T.GlyphOfRaiseDead})})},kt={name:"Unholy 2H",data:y.create({talentsString:"-320050500002-2300303150032152000150013133151",glyphs:b.create({major1:f.GlyphOfTheGhoul,major2:f.GlyphOfDarkDeath,major3:f.GlyphOfIcyTouch,minor1:T.GlyphOfHornOfWinter,minor2:T.GlyphOfPestilence,minor3:T.GlyphOfRaiseDead})})},Mt={name:"Blood DPS",data:y.create({talentsString:"2305120530003303231023001351--230220305003",glyphs:b.create({major1:f.GlyphOfDancingRuneWeapon,major2:f.GlyphOfDeathStrike,major3:f.GlyphOfDisease,minor1:T.GlyphOfHornOfWinter,minor2:T.GlyphOfPestilence,minor3:T.GlyphOfRaiseDead})})},jt=S.create({useDeathAndDecay:!0,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useGargoyle:!0,useEmpowerRuneWeapon:!0,holdErwArmy:!1,preNerfedGargoyle:!1,armyOfTheDead:o.AsMajorCd,startingPresence:e.Unholy,blPresence:e.Blood,presence:e.Blood,gargoylePresence:e.Unholy,bloodRuneFiller:i.BloodBoil,useAms:!1,drwDiseases:r.Pestilence,bloodSpender:s.HS,useDancingRuneWeapon:!0}),zt=R.create({drwPestiApply:!0,startingRunicPower:0,petUptime:1,precastGhoulFrenzy:!1,precastHornOfWinter:!0,unholyFrenzyTarget:p.create({targetIndex:u})}),xt=S.create({useDeathAndDecay:!1,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,preNerfedGargoyle:!1,startingPresence:e.Blood,presence:e.Blood,bloodRuneFiller:i.BloodBoil,useAms:!1,avgAmsSuccessRate:1,avgAmsHit:1e4,drwDiseases:r.Pestilence,frostRotationType:g.SingleTarget,frostCustomRotation:C.create({spells:[E.create({spell:d.CustomDeathAndDecay}),E.create({spell:d.CustomIcyTouch}),E.create({spell:d.CustomPlagueStrike}),E.create({spell:d.CustomPestilence}),E.create({spell:d.CustomHowlingBlastRime}),E.create({spell:d.CustomHowlingBlast}),E.create({spell:d.CustomBloodBoil}),E.create({spell:d.CustomObliterate}),E.create({spell:d.CustomFrostStrike})]})}),Jt=R.create({drwPestiApply:!0,startingRunicPower:0,petUptime:1,precastHornOfWinter:!0,unholyFrenzyTarget:p.create({targetIndex:u})}),Kt=S.create({refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,preNerfedGargoyle:!1,startingPresence:e.Blood,bloodRuneFiller:i.BloodStrike,armyOfTheDead:o.PreCast,holdErwArmy:!1,useAms:!1,drwDiseases:r.Pestilence,bloodSpender:s.HS,useDancingRuneWeapon:!0}),_t=R.create({drwPestiApply:!0,startingRunicPower:0,petUptime:1,precastHornOfWinter:!0,unholyFrenzyTarget:p.create({targetIndex:u})}),qt={},Lt=w.create({flask:D.FlaskOfEndlessRage,food:v.FoodDragonfinFilet,defaultPotion:P.PotionOfSpeed,petFood:W.PetFoodSpicedMammothTreats,prepopPotion:P.PotionOfSpeed,thermalSapper:!0,fillerExplosive:A.ExplosiveSaroniteBomb}),Vt={name:"P1 Blood",tooltip:q,enableWhen:t=>0==t.getTalentTree(),gear:B.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t  41398,\n\t\t\t  42702\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t  },\n\t\t  {\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  42142\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  40037\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t  },\n\t\t  {\n\t\t\t"id": 40075\n\t\t  },\n\t\t  {\n\t\t\t"id": 39401\n\t\t  },\n\t\t  {\n\t\t\t"id": 40256\n\t\t  },\n\t\t  {\n\t\t\t"id": 42987\n\t\t  },\n\t\t  {\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3368\n\t\t  },\n\t\t  {},\n\t\t  {\n\t\t\t"id": 40207\n\t\t  }\n  ]}')},Qt={name:"P2 Blood",tooltip:q,enableWhen:t=>0==t.getTalentTree(),gear:B.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 46115,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t  41398,\n\t\t\t  42702\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45459,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46117,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46032,\n\t\t\t"enchant": 3831,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46111,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  42142\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45663,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46113,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45241,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  45862,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45134,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45599,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45534,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46048,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 42987\n\t\t  },\n\t\t  {\n\t\t\t"id": 45931\n\t\t  },\n\t\t  {\n\t\t\t"id": 45516,\n\t\t\t"enchant": 3368,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {},\n\t\t  {\n\t\t\t"id": 45254\n\t\t  }\n  ]}')},$t={name:"Pre-Raid 2H Unholy",toolbar:q,enableWhen:t=>2==t.getTalentTree()&&0==t.getTalents().nervesOfColdSteel,gear:B.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41400,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37397\n\t\t},\n\t\t{\n\t\t\t"id": 37627,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 39617,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39618,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40688,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 44935\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 41257,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40867\n\t\t}\n  ]}')},Xt={name:"P1 2H Unholy",toolbar:q,enableWhen:t=>2==t.getTalentTree()&&0==t.getTalents().nervesOfColdSteel,gear:B.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41400,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40038,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')},Yt={name:"Pre-Raid DW Unholy",toolbar:q,enableWhen:t=>2==t.getTalentTree()&&t.getTalents().nervesOfColdSteel>0,gear:B.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41400,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37397\n\t\t},\n\t\t{\n\t\t\t"id": 37627,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 39617,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39618,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40688,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 44935\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 41383,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40703,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40867\n\t\t}\n  ]}')},Zt={name:"P1 DW Unholy",toolbar:q,enableWhen:t=>2==t.getTalentTree()&&t.getTalents().nervesOfColdSteel>0,gear:B.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39421\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40347,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40294,\n\t\t\t"enchant": 3823\n\t\t},\n\t\t{\n\t\t\t"id": 39706,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 37390\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40402,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40491,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 42620\n\t\t}\n  ]}')},tn={name:"P2 DW Unholy",toolbar:q,enableWhen:t=>2==t.getTalentTree()&&t.getTalents().nervesOfColdSteel>0,gear:B.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 45472,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t  41398,\n\t\t\t  40041\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46040,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46117,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45588,\n\t\t\t"enchant": 3831,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46111,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  42142\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45663,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45481,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45241,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  45862,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45134,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t  40041,\n\t\t\t  39996,\n\t\t\t  40022\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45599,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45534,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45250\n\t\t  },\n\t\t  {\n\t\t\t"id": 45609\n\t\t  },\n\t\t  {\n\t\t\t"id": 42987\n\t\t  },\n\t\t  {\n\t\t\t"id": 46097,\n\t\t\t"enchant": 3368,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46036,\n\t\t\t"enchant": 3368,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45254\n\t\t  }\n  ]}')},nn={name:"Pre-Raid Frost",tooltip:q,enableWhen:t=>1==t.getTalentTree(),gear:B.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42645,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 34388,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 39617,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39618,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37171,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42642,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44935\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 41383,\n\t\t\t"enchant": 3370\n\t\t},\n\t\t{\n\t\t\t"id": 43611,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40715\n\t\t}\n  ]}')},en={name:"P1 Frost",tooltip:q,enableWhen:t=>1==t.getTalentTree(),gear:B.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3370\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')},an={name:"P2 Frost",tooltip:q,enableWhen:t=>1==t.getTalentTree(),gear:B.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 46115,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t  41398,\n\t\t\t  42702\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45459,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46117,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46032,\n\t\t\t"enchant": 3831,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46111,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  42142\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45663,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46113,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45241,\n\t\t\t"gems": [\n\t\t\t  42142,\n\t\t\t  45862,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45134,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45599,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45608,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45534,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45931\n\t\t  },\n\t\t  {\n\t\t\t"id": 42987\n\t\t  },\n\t\t  {\n\t\t\t"id": 46097,\n\t\t\t"enchant": 3370,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46097,\n\t\t\t"enchant": 3368,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 40207\n\t\t  }\n  ]}')},on={name:"P1 Frost Sub Unh",tooltip:q,enableWhen:t=>1==t.getTalentTree(),gear:B.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40058,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3370\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')};class ln extends L{constructor(t,n){super(t,n,{cssClass:"deathknight-sim-ui",cssScheme:"death-knight",knownIssues:[],epStats:[G.StatStrength,G.StatArmor,G.StatAgility,G.StatAttackPower,G.StatExpertise,G.StatMeleeHit,G.StatMeleeCrit,G.StatMeleeHaste,G.StatArmorPenetration,G.StatSpellHit,G.StatSpellCrit,G.StatSpellHaste],epPseudoStats:[O.PseudoStatMainHandDps,O.PseudoStatOffHandDps],epReferenceStat:G.StatAttackPower,displayStats:[G.StatHealth,G.StatArmor,G.StatStrength,G.StatAgility,G.StatSpellHit,G.StatSpellCrit,G.StatAttackPower,G.StatMeleeHit,G.StatMeleeCrit,G.StatMeleeHaste,G.StatArmorPenetration,G.StatExpertise],defaults:{gear:tn.gear,epWeights:I.fromMap({[G.StatStrength]:3.22,[G.StatAgility]:.62,[G.StatArmor]:.01,[G.StatAttackPower]:1,[G.StatExpertise]:1.13,[G.StatMeleeHaste]:1.85,[G.StatMeleeHit]:1.92,[G.StatMeleeCrit]:.76,[G.StatArmorPenetration]:.77,[G.StatSpellHit]:.8,[G.StatSpellCrit]:.34},{[O.PseudoStatMainHandDps]:3.1,[O.PseudoStatOffHandDps]:1.79}),consumes:Lt,rotation:jt,talents:Ut.data,specOptions:zt,raidBuffs:F.create({giftOfTheWild:H.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:H.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:H.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:H.TristateEffectImproved,stoneskinTotem:H.TristateEffectImproved,moonkinAura:H.TristateEffectRegular,wrathOfAirTotem:!0,powerWordFortitude:H.TristateEffectImproved}),partyBuffs:N.create({heroicPresence:!1}),individualBuffs:U.create({blessingOfKings:!0,blessingOfMight:H.TristateEffectImproved}),debuffs:k.create({bloodFrenzy:!0,faerieFire:H.TristateEffectImproved,sunderArmor:!0,ebonPlaguebringer:!0,mangle:!0,heartOfTheCrusader:!0,shadowMastery:!0})},playerIconInputs:[],rotationInputs:Ft,petConsumeInputs:[V],includeBuffDebuffInputs:[Q,$],excludeBuffDebuffInputs:[X,Y,Z],otherInputs:{inputs:[st,et,at,ot,it,lt,tt,nt]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[Mt,Ht,Nt,Ut,kt],gear:[Vt,Qt,nn,en,on,an,Yt,$t,Zt,Xt,tn]}})}}export{Mt as B,ln as D,Ht as F,qt as O,Vt as P,Ut as U,Kt as a,_t as b,Lt as c,Qt as d,xt as e,Jt as f,en as g,an as h,jt as i,zt as j,Zt as k,tn as l};
//# sourceMappingURL=sim-1638b5ea.chunk.js.map
