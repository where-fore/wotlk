{"version":3,"file":"sim-458b97ea.chunk.js","sources":["../../../ui/tank_deathknight/presets.ts","../../../ui/tank_deathknight/inputs.ts","../../../ui/tank_deathknight/sim.ts"],"sourcesContent":["import { Consumes } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tTankDeathknight_Rotation as TankDeathKnightRotation,\n\tTankDeathknight_Options as TankDeathKnightOptions,\n\tDeathknightMajorGlyph,\n\tDeathknightMinorGlyph,\n  TankDeathknight_Rotation_Opener as Opener,\n  TankDeathknight_Rotation_OptimizationSetting as OptimizationSetting,\n  TankDeathknight_Rotation_BloodSpell as BloodSpell,\n  TankDeathknight_Rotation_Presence as Presence,\n} from '../core/proto/deathknight.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nexport const BloodTalents = {\n\tname: 'Blood',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005512153330030320102013-3050505000023-005',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const DoubleBuffBloodTalents = {\n\tname: '2B Blood',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005512153330030320102013-3050505000023201-002',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const FrostTalents = {\n\tname: 'Frost',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005510003-3050535000223301030023310035-005',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const DoubleBuffFrostTalents = {\n\tname: '2B Frost',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '00551005303003002-305053510022330100002301-005',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const DefaultRotation = TankDeathKnightRotation.create({\n  opener: Opener.Threat,\n  optimizationSetting: OptimizationSetting.Hps,\n  bloodSpell: BloodSpell.BloodStrike,\n  presence: Presence.Frost,\n});\n\nexport const DefaultOptions = TankDeathKnightOptions.create({\n\tstartingRunicPower: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfStoneblood,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.IndestructiblePotion,\n\tprepopPotion: Potions.IndestructiblePotion,\n});\n\nexport const P1_BLOOD_PRESET = {\n\tname: 'P1 Blood',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 40565,\n\t\t\t\"enchant\": 3878,\n\t\t\t\"gems\": [\n\t\t\t\t41380,\n\t\t\t\t36767\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40387\n\t\t},\n\t\t{\n\t\t\t\"id\": 39704,\n\t\t\t\"enchant\": 3852,\n\t\t\t\"gems\": [\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40252,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 40559,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t40022\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40306,\n\t\t\t\"enchant\": 3850,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40563,\n\t\t\t\"enchant\": 3860,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39759,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40567,\n\t\t\t\"enchant\": 3822,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40297,\n\t\t\t\"enchant\": 3232\n\t\t},\n\t\t{\n\t\t\t\"id\": 40718\n\t\t},\n\t\t{\n\t\t\t\"id\": 40107\n\t\t},\n\t\t{\n\t\t\t\"id\": 44063,\n\t\t\t\"gems\": [\n\t\t\t\t36767,\n\t\t\t\t36767\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 42341,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40406,\n\t\t\t\"enchant\": 3847\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 40207\n\t\t}\n  ]}`),\n};\n\nexport const P2_BLOOD_PRESET = {\n\tname: 'P2 Blood',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 46120,\n\t\t\t\"enchant\": 3878,\n\t\t\t\"gems\": [\n\t\t\t  41380,\n\t\t\t  36767\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45485,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46122,\n\t\t\t\"enchant\": 3852,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45496,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t  40022\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46118,\n\t\t\t\"gems\": [\n\t\t\t  36767,\n\t\t\t  36767\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45111,\n\t\t\t\"enchant\": 3850,\n\t\t\t\"gems\": [\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46119,\n\t\t\t\"enchant\": 3860,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45551,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45594,\n\t\t\t\"enchant\": 3822,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45988,\n\t\t\t\"enchant\": 3232,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45471,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45326\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45158\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46021\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45533,\n\t\t\t\"enchant\": 3370,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {},\n\t\t  {\n\t\t\t\"id\": 45144\n\t\t  }\n  ]}`),\n};\n\nexport const P1_FROST_PRESET = {\n\tname: 'P1 Frost',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 40565,\n\t\t\t\"enchant\": 3878,\n\t\t\t\"gems\": [\n\t\t\t  41380,\n\t\t\t  36767\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40387\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40568,\n\t\t\t\"enchant\": 3852,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40252,\n\t\t\t\"enchant\": 3605\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40559,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40022\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40306,\n\t\t\t\"enchant\": 3850,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40563,\n\t\t\t\"enchant\": 3860,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 39759,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40589,\n\t\t\t\"enchant\": 3822\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40297,\n\t\t\t\"enchant\": 3232\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40718\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40107\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 44063,\n\t\t\t\"gems\": [\n\t\t\t  36767,\n\t\t\t  36767\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40257\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40345,\n\t\t\t\"enchant\": 3370\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40345,\n\t\t\t\"enchant\": 3368\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 40714\n\t\t  }\n  ]}`),\n};\n\nexport const P2_FROST_PRESET = {\n\tname: 'P2 Frost',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 46120,\n\t\t\t\"enchant\": 3878,\n\t\t\t\"gems\": [\n\t\t\t  41380,\n\t\t\t  36767\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45485,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46122,\n\t\t\t\"enchant\": 3852,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45496,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t  40022\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46118,\n\t\t\t\"gems\": [\n\t\t\t  36767,\n\t\t\t  36767\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45111,\n\t\t\t\"enchant\": 3850,\n\t\t\t\"gems\": [\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46119,\n\t\t\t\"enchant\": 3860,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45551,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45594,\n\t\t\t\"enchant\": 3822,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45988,\n\t\t\t\"enchant\": 3232,\n\t\t\t\"gems\": [\n\t\t\t  40008,\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45471,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45326\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45158\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46021\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46097,\n\t\t\t\"enchant\": 3370,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46097,\n\t\t\t\"enchant\": 3368,\n\t\t\t\"gems\": [\n\t\t\t  40008\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45144\n\t\t  }\n  ]}`),\n};\n","import { Spec } from '../core/proto/common.js';\n\n\nimport {\n\tDeathknightTalents as DeathknightTalents,\n\tDeathknight_Rotation as DeathknightRotation,\n\tDeathknight_Options as DeathknightOptions,\n\tTankDeathknight_Rotation_OptimizationSetting as OptimizationSetting,\n\tTankDeathknight_Rotation_Opener as Opener,\n\tTankDeathknight_Rotation_BloodSpell as BloodSpell,\n\tTankDeathknight_Rotation_Presence as Presence,\n\tTankDeathknight_Rotation_BloodTapPrio as BloodTapPrio,\n} from '../core/proto/deathknight.js';\n\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\nimport { Player } from '../core/player';\nimport { TypedEvent } from '../core/typed_event';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const StartingRunicPower = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecTankDeathknight>({\n\tfieldName: 'startingRunicPower',\n\tlabel: 'Starting Runic Power',\n\tlabelTooltip: 'Initial RP at the start of each iteration.',\n})\n\nexport const DefensiveCdDelay = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecTankDeathknight>({\n\tfieldName: 'defensiveDelay',\n\tlabel: 'Defensives Delay',\n\tlabelTooltip: 'Minimum delay between using more defensive cooldowns.',\n})\n\nexport const TankDeathKnightRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, Presence>({\n\t\t\tfieldName: 'presence',\n\t\t\tlabel: 'Presence',\n\t\t\tlabelTooltip: 'Presence to be in during the encounter.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Blood', value: Presence.Blood },\n\t\t\t\t{ name: 'Frost', value: Presence.Frost },\n\t\t\t\t{ name: 'Unholy', value: Presence.Unholy },\n\t\t\t],\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, Opener>({\n\t\t\tfieldName: 'opener',\n\t\t\tlabel: 'Opener',\n\t\t\tlabelTooltip: 'Chose what opener to perform:<br>\\\n\t\t\t\t<b>Regular</b>: Regular opener.<br>\\\n\t\t\t\t<b>Threat</b>: Full IT spam for max threat.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Regular', value: Opener.Regular },\n\t\t\t\t{ name: 'Threat', value: Opener.Threat },\n\t\t\t],\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, OptimizationSetting>({\n\t\t\tfieldName: 'optimizationSetting',\n\t\t\tlabel: 'Optimization Setting',\n\t\t\tlabelTooltip: 'Chose what metric to optimize:<br>\\\n\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\\\n\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Hps', value: OptimizationSetting.Hps },\n\t\t\t\t{ name: 'Tps', value: OptimizationSetting.Tps },\n\t\t\t],\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, BloodSpell>({\n\t\t\tfieldName: 'bloodSpell',\n\t\t\tlabel: 'Blood Spell',\n\t\t\tlabelTooltip: 'Chose what blood rune spender to use.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Blood Strike', value: BloodSpell.BloodStrike },\n\t\t\t\t{ name: 'Blood Boil', value: BloodSpell.BloodBoil },\n\t\t\t\t{ name: 'Heart Strike', value: BloodSpell.HeartStrike },\n\t\t\t],\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, BloodTapPrio>({\n\t\t\tfieldName: 'bloodTapPrio',\n\t\t\tlabel: 'Blood Tap',\n\t\t\tlabelTooltip: 'Chose how to use Blood Tap:<br>\\\n\t\t\t\t<b>Defensive</b>: Save Blood Tap for activating defensive cds.<br>\\\n\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Defensive', value: BloodTapPrio.Defensive },\n\t\t\t\t{ name: 'Offensive', value: BloodTapPrio.Offensive },\n\t\t\t],\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t],\n};\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat, PseudoStat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\n\nimport { TankDeathknight, TankDeathknight_Rotation as DeathKnightRotation, DeathknightTalents as DeathKnightTalents, TankDeathknight_Options as DeathKnightOptions } from '../core/proto/deathknight.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as DeathKnightInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class TankDeathknightSimUI extends IndividualSimUI<Spec.SpecTankDeathknight> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecTankDeathknight>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'tank-deathknight-sim-ui',\n\t\t\tcssScheme: 'death-knight',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t\"<p>Defensive CDs use is very basic and wip.</p>\"\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatArmor,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatDefense,\n\t\t\t\tStat.StatDodge,\n\t\t\t\tStat.StatParry,\n\t\t\t\tStat.StatResilience,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t],\n\t\t\tepPseudoStats: [\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatAttackPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatArmor,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatDefense,\n\t\t\t\tStat.StatDodge,\n\t\t\t\tStat.StatParry,\n\t\t\t\tStat.StatResilience,\n\t\t\t],\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P2_BLOOD_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatArmor]: 0.05,\n\t\t\t\t\t[Stat.StatStamina]: 1,\n\t\t\t\t\t[Stat.StatStrength]: 0.33,\n\t\t\t\t\t[Stat.StatAgility]: 0.6,\n\t\t\t\t\t[Stat.StatAttackPower]: 0.06,\n\t\t\t\t\t[Stat.StatExpertise]: 0.67,\n\t\t\t\t\t[Stat.StatMeleeHit]: 0.67,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.28,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 0.21,\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.19,\n\t\t\t\t\t[Stat.StatBlock]: 0.35,\n\t\t\t\t\t[Stat.StatBlockValue]: 0.59,\n\t\t\t\t\t[Stat.StatDodge]: 0.7,\n\t\t\t\t\t[Stat.StatParry]: 0.58,\n\t\t\t\t\t[Stat.StatDefense]: 0.8,\n\t\t\t\t}, {\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.10,\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 0.0,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.BloodTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tretributionAura: true,\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tswiftRetribution: true,\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\ticyTalons: true,\n\t\t\t\t\tabominationsMight: true,\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tblessingOfSanctuary: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tbloodFrenzy: true,\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tsunderArmor: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tebonPlaguebringer: true,\n\t\t\t\t\tmangle: true,\n\t\t\t\t\theartOfTheCrusader: true,\n\t\t\t\t\tdemoralizingShout: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tfrostFever: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tinsectSwarm: true,\n\t\t\t\t\tjudgementOfLight: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: DeathKnightInputs.TankDeathKnightRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.SpellDamageDebuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\t\t\tOtherInputs.IncomingHps,\n\t\t\t\t\tOtherInputs.HealingCadence,\n\t\t\t\t\tOtherInputs.BurstWindow,\n\t\t\t\t\tOtherInputs.InspirationUptime,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t\tDeathKnightInputs.StartingRunicPower,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.BloodTalents,\n\t\t\t\t\tPresets.DoubleBuffBloodTalents,\n\t\t\t\t\tPresets.FrostTalents,\n\t\t\t\t\tPresets.DoubleBuffFrostTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.P1_BLOOD_PRESET,\n\t\t\t\t\tPresets.P1_FROST_PRESET,\n\t\t\t\t\tPresets.P2_BLOOD_PRESET,\n\t\t\t\t\tPresets.P2_FROST_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["BloodTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","DeathknightMajorGlyph","GlyphOfDisease","major2","GlyphOfRuneStrike","major3","GlyphOfDarkCommand","minor1","DeathknightMinorGlyph","GlyphOfHornOfWinter","minor2","GlyphOfBloodTap","minor3","GlyphOfRaiseDead","DoubleBuffBloodTalents","FrostTalents","DoubleBuffFrostTalents","DefaultRotation","TankDeathKnightRotation","opener","Opener","Threat","optimizationSetting","OptimizationSetting","Hps","bloodSpell","BloodSpell","BloodStrike","presence","Presence","Frost","DefaultOptions","TankDeathKnightOptions","startingRunicPower","DefaultConsumes","Consumes","flask","Flask","FlaskOfStoneblood","food","Food","FoodDragonfinFilet","defaultPotion","Potions","IndestructiblePotion","prepopPotion","P1_BLOOD_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P2_BLOOD_PRESET","P1_FROST_PRESET","P2_FROST_PRESET","StartingRunicPower","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","TankDeathKnightRotationConfig","inputs","InputHelpers.makeRotationEnumInput","values","value","Blood","Unholy","changeEmitter","player","TypedEvent","onAny","rotationChangeEmitter","talentsChangeEmitter","Regular","Tps","BloodBoil","HeartStrike","BloodTapPrio","Defensive","Offensive","TankDeathknightSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatSpellHit","StatSpellCrit","StatSpellHaste","StatHealth","StatArmor","StatArmorPenetration","StatDefense","StatDodge","StatParry","StatResilience","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","defaults","Presets.P2_BLOOD_PRESET","epWeights","Stats","fromMap","StatBlock","StatBlockValue","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.BloodTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","retributionAura","powerWordFortitude","TristateEffect","TristateEffectImproved","giftOfTheWild","swiftRetribution","strengthOfEarthTotem","icyTalons","abominationsMight","leaderOfThePack","TristateEffectRegular","sanctifiedRetribution","bloodlust","devotionAura","stoneskinTotem","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfSanctuary","debuffs","Debuffs","bloodFrenzy","faerieFire","sunderArmor","misery","ebonPlaguebringer","mangle","heartOfTheCrusader","demoralizingShout","frostFever","insectSwarm","judgementOfLight","playerIconInputs","rotationInputs","DeathKnightInputs.TankDeathKnightRotationConfig","includeBuffDebuffInputs","IconInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.HpPercentForDefensives","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.BurstWindow","OtherInputs.InspirationUptime","OtherInputs.InFrontOfTarget","DeathKnightInputs.StartingRunicPower","encounterPicker","showExecuteProportion","presets","Presets.DoubleBuffBloodTalents","Presets.FrostTalents","Presets.DoubleBuffFrostTalents","Presets.P1_BLOOD_PRESET","Presets.P1_FROST_PRESET","Presets.P2_FROST_PRESET"],"mappings":"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"}