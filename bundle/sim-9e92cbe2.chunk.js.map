{"version":3,"file":"sim-9e92cbe2.chunk.js","sources":["../../../ui/hunter/inputs.ts","../../../ui/hunter/presets.ts","../../../ui/hunter/sim.ts"],"sourcesContent":["import { BooleanPicker } from '../core/components/boolean_picker.js';\nimport { EnumPicker } from '../core/components/enum_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig } from '../core/components/icon_enum_picker.js';\nimport { IconPickerConfig } from '../core/components/icon_picker.js';\nimport { CustomRotation } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { Target } from '../core/target.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { makePetTypeInputConfig } from '../core/talents/hunter_pet.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\nimport {\n\tHunter,\n\tHunter_Rotation as HunterRotation,\n\tHunter_Rotation_RotationType as RotationType,\n\tHunter_Rotation_StingType as StingType,\n\tHunter_Rotation_SpellOption as SpellOption,\n\tHunter_Options as HunterOptions,\n\tHunter_Options_Ammo as Ammo,\n\tHunter_Options_PetType as PetType,\n} from '../core/proto/hunter.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const WeaponAmmo = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecHunter, Ammo>({\n\tfieldName: 'ammo',\n\tnumColumns: 2,\n\tvalues: [\n\t\t{ value: Ammo.AmmoNone, tooltip: 'No Ammo' },\n\t\t{ actionId: ActionId.fromItemId(52021), value: Ammo.IcebladeArrow },\n\t\t{ actionId: ActionId.fromItemId(41165), value: Ammo.SaroniteRazorheads },\n\t\t{ actionId: ActionId.fromItemId(41586), value: Ammo.TerrorshaftArrow },\n\t\t{ actionId: ActionId.fromItemId(31737), value: Ammo.TimelessArrow },\n\t\t{ actionId: ActionId.fromItemId(34581), value: Ammo.MysteriousArrow },\n\t\t{ actionId: ActionId.fromItemId(33803), value: Ammo.AdamantiteStinger },\n\t\t{ actionId: ActionId.fromItemId(28056), value: Ammo.BlackflightArrow },\n\t],\n});\n\nexport const PetTypeInput = makePetTypeInputConfig(true);\n\nexport const PetUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecHunter>({\n\tfieldName: 'petUptime',\n\tlabel: 'Pet Uptime (%)',\n\tlabelTooltip: 'Percent of the fight duration for which your pet will be alive.',\n\tpercent: true,\n});\n\nexport const UseHuntersMark = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHunter>({\n\tfieldName: 'useHuntersMark',\n\tid: ActionId.fromSpellId(53338),\n});\n\nexport const SniperTrainingUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecHunter>({\n\tfieldName: 'sniperTrainingUptime',\n\tlabel: 'ST Uptime (%)',\n\tlabelTooltip: 'Uptime for the Sniper Training talent, as a percent of the fight duration.',\n\tpercent: true,\n\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getTalents().sniperTraining > 0,\n\tchangeEmitter: (player: Player<Spec.SpecHunter>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const HunterRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecHunter, RotationType>({\n\t\t\tfieldName: 'type',\n\t\t\tlabel: 'Type',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Single Target', value: RotationType.SingleTarget },\n\t\t\t\t{ name: 'AOE', value: RotationType.Aoe },\n\t\t\t\t{ name: 'Custom', value: RotationType.Custom },\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecHunter, StingType>({\n\t\t\tfieldName: 'sting',\n\t\t\tlabel: 'Sting',\n\t\t\tlabelTooltip: 'Maintains the selected Sting on the primary target.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: StingType.NoSting },\n\t\t\t\t{ name: 'Scorpid Sting', value: StingType.ScorpidSting },\n\t\t\t\t{ name: 'Serpent Sting', value: StingType.SerpentSting },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getRotation().type == RotationType.SingleTarget,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecHunter>({\n\t\t\tfieldName: 'trapWeave',\n\t\t\tlabel: 'Trap Weave',\n\t\t\tlabelTooltip: 'Uses Explosive Trap at appropriate times. Note that selecting this will disable Black Arrow because they share a CD.',\n\t\t\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getRotation().type != RotationType.Custom,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecHunter>({\n\t\t\tfieldName: 'timeToTrapWeaveMs',\n\t\t\tlabel: 'Weave Time',\n\t\t\tlabelTooltip: 'Amount of time, in milliseconds, between when you start moving towards the boss and when you re-engage your ranged autos.',\n\t\t\tenableWhen: (player: Player<Spec.SpecHunter>) => (player.getRotation().type != RotationType.Custom && player.getRotation().trapWeave) || (player.getRotation().type == RotationType.Custom && player.getRotation().customRotation?.spells.some(spell => spell.spell == SpellOption.ExplosiveTrap) || false),\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecHunter>({\n\t\t\tfieldName: 'allowExplosiveShotDownrank',\n\t\t\tlabel: 'Allow ES Downrank',\n\t\t\tlabelTooltip: 'Weaves Explosive Shot Rank 3 during LNL procs. This works because the rank 3 and rank 4 dots can stack.',\n\t\t\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getRotation().type != RotationType.Custom && player.getTalents().explosiveShot && player.getTalents().lockAndLoad > 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecHunter>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeCustomRotationInput<Spec.SpecHunter, SpellOption>({\n\t\t\tfieldName: 'customRotation',\n\t\t\tnumColumns: 2,\n\t\t\tvalues: [\n\t\t\t\t{ actionId: ActionId.fromSpellId(49052), value: SpellOption.SteadyShot },\n\t\t\t\t{ actionId: ActionId.fromSpellId(49045), value: SpellOption.ArcaneShot },\n\t\t\t\t{ actionId: ActionId.fromSpellId(49050), value: SpellOption.AimedShot },\n\t\t\t\t{ actionId: ActionId.fromSpellId(49048), value: SpellOption.MultiShot },\n\t\t\t\t{ actionId: ActionId.fromSpellId(49001), value: SpellOption.SerpentStingSpell },\n\t\t\t\t{ actionId: ActionId.fromSpellId(3043), value: SpellOption.ScorpidStingSpell },\n\t\t\t\t{ actionId: ActionId.fromSpellId(61006), value: SpellOption.KillShot },\n\t\t\t\t{ actionId: ActionId.fromSpellId(63672), value: SpellOption.BlackArrow },\n\t\t\t\t{ actionId: ActionId.fromSpellId(53209), value: SpellOption.ChimeraShot },\n\t\t\t\t{ actionId: ActionId.fromSpellId(60053), value: SpellOption.ExplosiveShot, text: 'R4' },\n\t\t\t\t{ actionId: ActionId.fromSpellId(60052), value: SpellOption.ExplosiveShotDownrank, text: 'R3' },\n\t\t\t\t{ actionId: ActionId.fromSpellId(49067), value: SpellOption.ExplosiveTrap },\n\t\t\t\t{ actionId: ActionId.fromSpellId(58434), value: SpellOption.Volley },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getRotation().type == RotationType.Custom,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecHunter>({\n\t\t\tfieldName: 'viperStartManaPercent',\n\t\t\tlabel: 'Viper Start Mana %',\n\t\t\tlabelTooltip: 'Switch to Aspect of the Viper when mana goes below this amount.',\n\t\t\tpercent: true,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecHunter>({\n\t\t\tfieldName: 'viperStopManaPercent',\n\t\t\tlabel: 'Viper Stop Mana %',\n\t\t\tlabelTooltip: 'Switch back to Aspect of the Hawk when mana goes above this amount.',\n\t\t\tpercent: true,\n\t\t}),\n\t],\n};\n","import { CustomRotation, CustomSpell } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { PetFood } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport { ferocityDefault, ferocityBMDefault } from '../core/talents/hunter_pet.js';\nimport { Player } from '../core/player.js';\n\nimport {\n\tHunter_Rotation as HunterRotation,\n\tHunter_Rotation_RotationType as RotationType,\n\tHunter_Rotation_StingType as StingType,\n\tHunter_Rotation_SpellOption as SpellOption,\n\tHunter_Options as HunterOptions,\n\tHunter_Options_Ammo as Ammo,\n\tHunter_Options_PetType as PetType,\n\tHunterMajorGlyph as MajorGlyph,\n\tHunterMinorGlyph as MinorGlyph,\n} from '../core/proto/hunter.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const BeastMasteryTalents = {\n\tname: 'Beast Mastery',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '51200201505112243120531251-025305101',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfBestialWrath,\n\t\t\tmajor2: MajorGlyph.GlyphOfSteadyShot,\n\t\t\tmajor3: MajorGlyph.GlyphOfSerpentSting,\n\t\t\tminor1: MinorGlyph.GlyphOfFeignDeath,\n\t\t\tminor2: MinorGlyph.GlyphOfRevivePet,\n\t\t\tminor3: MinorGlyph.GlyphOfMendPet,\n\t\t}),\n\t}),\n};\n\nexport const MarksmanTalents = {\n\tname: 'Marksman',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '502-035335131030013233035031051-5000002',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfSerpentSting,\n\t\t\tmajor2: MajorGlyph.GlyphOfSteadyShot,\n\t\t\tmajor3: MajorGlyph.GlyphOfChimeraShot,\n\t\t\tminor1: MinorGlyph.GlyphOfFeignDeath,\n\t\t\tminor2: MinorGlyph.GlyphOfRevivePet,\n\t\t\tminor3: MinorGlyph.GlyphOfMendPet,\n\t\t}),\n\t}),\n};\n\nexport const SurvivalTalents = {\n\tname: 'Survival',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-015305101-5000032500033330532135301311',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfSerpentSting,\n\t\t\tmajor2: MajorGlyph.GlyphOfExplosiveShot,\n\t\t\tmajor3: MajorGlyph.GlyphOfKillShot,\n\t\t\tminor1: MinorGlyph.GlyphOfFeignDeath,\n\t\t\tminor2: MinorGlyph.GlyphOfRevivePet,\n\t\t\tminor3: MinorGlyph.GlyphOfMendPet,\n\t\t}),\n\t}),\n};\n\nexport const DefaultRotation = HunterRotation.create({\n\ttype: RotationType.SingleTarget,\n\tsting: StingType.SerpentSting,\n\ttrapWeave: false,\n\ttimeToTrapWeaveMs: 2000,\n\tviperStartManaPercent: 0.1,\n\tviperStopManaPercent: 0.3,\n\tcustomRotation: CustomRotation.create({\n\t\tspells: [\n\t\t\tCustomSpell.create({ spell: SpellOption.SerpentStingSpell }),\n\t\t\tCustomSpell.create({ spell: SpellOption.KillShot }),\n\t\t\tCustomSpell.create({ spell: SpellOption.ChimeraShot }),\n\t\t\tCustomSpell.create({ spell: SpellOption.BlackArrow }),\n\t\t\tCustomSpell.create({ spell: SpellOption.ExplosiveShot }),\n\t\t\tCustomSpell.create({ spell: SpellOption.AimedShot }),\n\t\t\tCustomSpell.create({ spell: SpellOption.ArcaneShot }),\n\t\t\tCustomSpell.create({ spell: SpellOption.SteadyShot }),\n\t\t],\n\t}),\n});\n\nexport const DefaultOptions = HunterOptions.create({\n\tammo: Ammo.SaroniteRazorheads,\n\tuseHuntersMark: true,\n\tpetType: PetType.Wolf,\n\tpetTalents: ferocityDefault,\n\tpetUptime: 1,\n\tsniperTrainingUptime: 0.9,\n});\n\nexport const BMDefaultOptions = HunterOptions.create({\n\tammo: Ammo.SaroniteRazorheads,\n\tuseHuntersMark: true,\n\tpetType: PetType.Wolf,\n\tpetTalents: ferocityBMDefault,\n\tpetUptime: 1,\n\tsniperTrainingUptime: 0.9,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodFishFeast,\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\n});\n\nexport const MM_PRERAID_PRESET = {\n\tname: 'MM Preraid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42551,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40678\n\t\t},\n\t\t{\n\t\t\t\"id\": 37373,\n\t\t\t\"enchant\": 3808\n\t\t},\n\t\t{\n\t\t\t\"id\": 43566,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 39579,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37170,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39582,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40014,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37407,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37669,\n\t\t\t\"enchant\": 3823\n\t\t},\n\t\t{\n\t\t\t\"id\": 37167,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37685\n\t\t},\n\t\t{\n\t\t\t\"id\": 42642,\n\t\t\t\"gems\": [\n\t\t\t\t40044\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 44249,\n\t\t\t\"enchant\": 3827\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 37191,\n\t\t\t\"enchant\": 3608\n\t\t}\n\t]}`),\n};\n\nexport const MM_P1_PRESET = {\n\tname: 'MM P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40543,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44664,\n\t\t\t\"gems\": [\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40507,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40403,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 43998,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40282,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40541,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40275,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40506,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40549,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40074\n\t\t},\n\t\t{\n\t\t\t\"id\": 40474\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 40388,\n\t\t\t\"enchant\": 3827\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 40385,\n\t\t\t\"enchant\": 3608\n\t\t}\n\t]}`),\n};\n\nexport const MM_P2_PRESET = {\n\tname: 'MM P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 45610,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45517,\n\t\t\t\"gems\": [\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45300,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t40043\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46032,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t40043\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45473,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t39997,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45869,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t40044,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45444,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t39997,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45467,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45536,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t39997,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45244,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45608,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46322,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45931\n\t\t},\n\t\t{\n\t\t\t\"id\": 46038\n\t\t},\n\t\t{\n\t\t\t\"id\": 45613,\n\t\t\t\"enchant\": 3827,\n\t\t\t\"gems\": [\n\t\t\t\t45879,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 45570,\n\t\t\t\"enchant\": 3608\n\t\t}\n\t]}`),\n};\n\nexport const SV_PRERAID_PRESET = {\n\tname: 'SV Preraid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42551,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40678\n\t\t},\n\t\t{\n\t\t\t\"id\": 37373,\n\t\t\t\"enchant\": 3808\n\t\t},\n\t\t{\n\t\t\t\"id\": 43406,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 39579,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37170,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39582,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37407,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37669,\n\t\t\t\"enchant\": 3823\n\t\t},\n\t\t{\n\t\t\t\"id\": 37167,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37685\n\t\t},\n\t\t{\n\t\t\t\"id\": 42642,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 44249,\n\t\t\t\"enchant\": 3827\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 37191,\n\t\t\t\"enchant\": 3608\n\t\t}\n\t]}`),\n};\n\nexport const SV_P1_PRESET = {\n\tname: 'SV P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40505,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44664,\n\t\t\t\"gems\": [\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40507,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40403,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 43998,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40282,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40541,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39762,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40331,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40549,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40074\n\t\t},\n\t\t{\n\t\t\t\"id\": 40474\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 40388,\n\t\t\t\"enchant\": 3827\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 40385,\n\t\t\t\"enchant\": 3608\n\t\t}\n\t]}`),\n};\n\nexport const SV_P2_PRESET = {\n\tname: 'SV P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 45610,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t40023\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45517,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45300,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46032,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t40044\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45473,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t39997,\n\t\t\t\t45879\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45869,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t40043,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45444,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t40023,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46095,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t42143,\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45536,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t39997,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45244,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t40023\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45608,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46322,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 45931\n\t\t},\n\t\t{\n\t\t\t\"id\": 45613,\n\t\t\t\"enchant\": 3827,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 45570,\n\t\t\t\"enchant\": 3608\n\t\t}\n\t]}`),\n};\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { Race } from '../core/proto/common.js';\nimport { RangedWeaponType } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat, PseudoStat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getTalentPoints } from '../core/proto_utils/utils.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { getPetTalentsConfig } from '../core/talents/hunter_pet.js';\nimport { protoToTalentString } from '../core/talents/factory.js';\n\nimport {\n\tHunter,\n\tHunter_Rotation as HunterRotation,\n\tHunter_Options as HunterOptions,\n\tHunter_Options_PetType as PetType,\n\tHunterPetTalents,\n} from '../core/proto/hunter.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as HunterInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class HunterSimUI extends IndividualSimUI<Spec.SpecHunter> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHunter>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'hunter-sim-ui',\n\t\t\tcssScheme: 'hunter',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\t\t\twarnings: [\n\t\t\t\t// Warning when using exotic pet without BM talented.\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecHunter>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: TypedEvent.onAny([simUI.player.talentsChangeEmitter, simUI.player.specOptionsChangeEmitter]),\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tconst petIsExotic = [\n\t\t\t\t\t\t\t\tPetType.Chimaera,\n\t\t\t\t\t\t\t\tPetType.CoreHound,\n\t\t\t\t\t\t\t\tPetType.Devilsaur,\n\t\t\t\t\t\t\t\tPetType.Silithid,\n\t\t\t\t\t\t\t\tPetType.SpiritBeast,\n\t\t\t\t\t\t\t\tPetType.Worm,\n\t\t\t\t\t\t\t].includes(simUI.player.getSpecOptions().petType);\n\n\t\t\t\t\t\t\tconst isBM = simUI.player.getTalents().beastMastery;\n\n\t\t\t\t\t\t\tif (petIsExotic && !isBM) {\n\t\t\t\t\t\t\t\treturn 'Cannot use exotic pets without the Beast Mastery talent.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t// Warning when too many Pet talent points are used without BM talented.\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecHunter>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: TypedEvent.onAny([simUI.player.talentsChangeEmitter, simUI.player.specOptionsChangeEmitter]),\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tconst specOptions = simUI.player.getSpecOptions();\n\t\t\t\t\t\t\tconst petTalents = specOptions.petTalents || HunterPetTalents.create();\n\t\t\t\t\t\t\tconst petTalentString = protoToTalentString(petTalents, getPetTalentsConfig(specOptions.petType));\n\t\t\t\t\t\t\tconst talentPoints = getTalentPoints(petTalentString);\n\n\t\t\t\t\t\t\tconst isBM = simUI.player.getTalents().beastMastery;\n\t\t\t\t\t\t\tconst maxPoints = isBM ? 20 : 16;\n\n\t\t\t\t\t\t\tif (talentPoints == 0) {\n\t\t\t\t\t\t\t\t// Just return here, so we don't show a warning during page load.\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t} else if (talentPoints < maxPoints) {\n\t\t\t\t\t\t\t\treturn 'Unspent pet talent points.';\n\t\t\t\t\t\t\t} else if (talentPoints > maxPoints) {\n\t\t\t\t\t\t\t\treturn 'More than 16 points spent in pet talents, but Beast Mastery is not talented.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatRangedAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tepPseudoStats: [\n\t\t\t\tPseudoStat.PseudoStatRangedDps,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP.\n\t\t\tepReferenceStat: Stat.StatRangedAttackPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatRangedAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecHunter>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, player.getTalents().lethalShots * 1 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\n\n\t\t\t\tconst rangedWeapon = player.getEquippedItem(ItemSlot.ItemSlotRanged);\n\t\t\t\tif (rangedWeapon?.enchant?.effectId == 3608) {\n\t\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, 40);\n\t\t\t\t}\n\t\t\t\tif (player.getRace() == Race.RaceDwarf && rangedWeapon?.item.rangedWeaponType == RangedWeaponType.RangedWeaponTypeGun) {\n\t\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, 1 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\t\t}\n\t\t\t\tif (player.getRace() == Race.RaceTroll && rangedWeapon?.item.rangedWeaponType == RangedWeaponType.RangedWeaponTypeBow) {\n\t\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, 1 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.SV_P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatStamina]: 0.5,\n\t\t\t\t\t[Stat.StatAgility]: 2.65,\n\t\t\t\t\t[Stat.StatIntellect]: 1.1,\n\t\t\t\t\t[Stat.StatRangedAttackPower]: 1.0,\n\t\t\t\t\t[Stat.StatMeleeHit]: 2,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 1.5,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.39,\n\t\t\t\t\t[Stat.StatArmorPenetration]: 1.32,\n\t\t\t\t}, {\n\t\t\t\t\t[PseudoStat.PseudoStatRangedDps]: 6.32,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.SurvivalTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\twindfuryTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbattleShout: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tunleashedRage: true,\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: 2,\n\t\t\t\t\tblessingOfMight: 2,\n\t\t\t\t\tvampiricTouch: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tsunderArmor: true,\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tcurseOfElements: true,\n\t\t\t\t\theartOfTheCrusader: true,\n\t\t\t\t\tsavageCombat: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tHunterInputs.PetTypeInput,\n\t\t\t\tHunterInputs.WeaponAmmo,\n\t\t\t\tHunterInputs.UseHuntersMark,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: HunterInputs.HunterRotationConfig,\n\t\t\tpetConsumeInputs: [\n\t\t\t\tIconInputs.SpicedMammothTreats,\n\t\t\t],\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.StaminaBuff,\n\t\t\t\tIconInputs.SpellDamageDebuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tHunterInputs.PetUptime,\n\t\t\t\t\tHunterInputs.SniperTrainingUptime,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.BeastMasteryTalents,\n\t\t\t\t\tPresets.MarksmanTalents,\n\t\t\t\t\tPresets.SurvivalTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.MM_PRERAID_PRESET,\n\t\t\t\t\tPresets.MM_P1_PRESET,\n\t\t\t\t\tPresets.MM_P2_PRESET,\n\t\t\t\t\tPresets.SV_PRERAID_PRESET,\n\t\t\t\t\tPresets.SV_P1_PRESET,\n\t\t\t\t\tPresets.SV_P2_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["WeaponAmmo","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","numColumns","values","value","Ammo","AmmoNone","tooltip","actionId","ActionId","fromItemId","IcebladeArrow","SaroniteRazorheads","TerrorshaftArrow","TimelessArrow","MysteriousArrow","AdamantiteStinger","BlackflightArrow","PetTypeInput","makePetTypeInputConfig","PetUptime","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","percent","UseHuntersMark","InputHelpers.makeSpecOptionsBooleanIconInput","id","fromSpellId","SniperTrainingUptime","showWhen","player","getTalents","sniperTraining","changeEmitter","TypedEvent","onAny","specOptionsChangeEmitter","talentsChangeEmitter","HunterRotationConfig","inputs","InputHelpers.makeRotationEnumInput","name","RotationType","SingleTarget","Aoe","Custom","StingType","NoSting","ScorpidSting","SerpentSting","getRotation","type","InputHelpers.makeRotationBooleanInput","InputHelpers.makeRotationNumberInput","enableWhen","trapWeave","customRotation","spells","some","spell","SpellOption","ExplosiveTrap","explosiveShot","lockAndLoad","rotationChangeEmitter","InputHelpers.makeCustomRotationInput","SteadyShot","ArcaneShot","AimedShot","MultiShot","SerpentStingSpell","ScorpidStingSpell","KillShot","BlackArrow","ChimeraShot","ExplosiveShot","text","ExplosiveShotDownrank","Volley","BeastMasteryTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfBestialWrath","major2","GlyphOfSteadyShot","major3","GlyphOfSerpentSting","minor1","MinorGlyph","GlyphOfFeignDeath","minor2","GlyphOfRevivePet","minor3","GlyphOfMendPet","MarksmanTalents","GlyphOfChimeraShot","SurvivalTalents","GlyphOfExplosiveShot","GlyphOfKillShot","DefaultRotation","HunterRotation","sting","timeToTrapWeaveMs","viperStartManaPercent","viperStopManaPercent","CustomRotation","CustomSpell","DefaultOptions","HunterOptions","ammo","useHuntersMark","petType","PetType","Wolf","petTalents","ferocityDefault","petUptime","sniperTrainingUptime","BMDefaultOptions","ferocityBMDefault","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfEndlessRage","food","Food","FoodFishFeast","petFood","PetFood","PetFoodSpicedMammothTreats","MM_PRERAID_PRESET","Tooltips.BASIC_BIS_DISCLAIMER","getTalentTree","gear","EquipmentSpec","fromJsonString","MM_P1_PRESET","MM_P2_PRESET","SV_PRERAID_PRESET","SV_P1_PRESET","SV_P2_PRESET","HunterSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","getContent","petIsExotic","Chimaera","CoreHound","Devilsaur","Silithid","SpiritBeast","Worm","includes","getSpecOptions","isBM","beastMastery","specOptions","HunterPetTalents","petTalentString","protoToTalentString","getPetTalentsConfig","talentPoints","getTalentPoints","maxPoints","epStats","Stat","StatStamina","StatIntellect","StatAgility","StatRangedAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatMP5","epPseudoStats","PseudoStat","PseudoStatRangedDps","epReferenceStat","displayStats","StatHealth","modifyDisplayStats","stats","Stats","addStat","lethalShots","Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE","rangedWeapon","getEquippedItem","ItemSlot","ItemSlotRanged","enchant","effectId","getRace","Race","RaceDwarf","item","rangedWeaponType","RangedWeaponType","RangedWeaponTypeGun","RaceTroll","RangedWeaponTypeBow","talents","defaults","Presets.SV_P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.SurvivalTalents","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","powerWordFortitude","TristateEffect","TristateEffectImproved","giftOfTheWild","bloodlust","strengthOfEarthTotem","windfuryTotem","battleShout","leaderOfThePack","sanctifiedRetribution","unleashedRage","moonkinAura","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","debuffs","Debuffs","sunderArmor","faerieFire","judgementOfWisdom","curseOfElements","heartOfTheCrusader","savageCombat","playerIconInputs","HunterInputs.PetTypeInput","HunterInputs.WeaponAmmo","HunterInputs.UseHuntersMark","rotationInputs","HunterInputs.HunterRotationConfig","petConsumeInputs","IconInputs.SpicedMammothTreats","includeBuffDebuffInputs","IconInputs.StaminaBuff","IconInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","HunterInputs.PetUptime","HunterInputs.SniperTrainingUptime","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.BeastMasteryTalents","Presets.MarksmanTalents","Presets.MM_PRERAID_PRESET","Presets.MM_P1_PRESET","Presets.MM_P2_PRESET","Presets.SV_PRERAID_PRESET","Presets.SV_P2_PRESET"],"mappings":"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"}