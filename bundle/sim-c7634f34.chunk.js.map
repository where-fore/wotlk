{"version":3,"file":"sim-c7634f34.chunk.js","sources":["../../../ui/balance_druid/inputs.ts","../../../ui/balance_druid/presets.ts","../../../ui/balance_druid/sim.ts"],"sourcesContent":["import { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\nimport {\n\tBalanceDruid_Options as DruidOptions,\n\tBalanceDruid_Rotation_Type as RotationType,\n\tBalanceDruid_Rotation_MfUsage as MfUsage,\n\tBalanceDruid_Rotation_IsUsage as IsUsage,\n\tBalanceDruid_Rotation_EclipsePrio as EclipsePrio,\n} from '../core/proto/druid.js';\n\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfInnervate = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecBalanceDruid>({\n\tfieldName: 'innervateTarget',\n\tid: ActionId.fromSpellId(29166),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecBalanceDruid>) => player.getSpecOptions().innervateTarget?.targetIndex != NO_TARGET,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecBalanceDruid>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.innervateTarget = RaidTarget.create({\n\t\t\ttargetIndex: newValue ? 0 : NO_TARGET,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const BalanceDruidRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecBalanceDruid, RotationType>({\n\t\t\tfieldName: 'type',\n\t\t\tlabel: 'Type',\n\t\t\tlabelTooltip: 'If set to \\'Adaptive\\', will dynamically adjust rotation.',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Adaptive', value: RotationType.Adaptive,\n\t\t\t\t\ttooltip: 'Dynamically adapts based on available mana to maximize CL casts without going OOM.',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Manual', value: RotationType.Manual,\n\t\t\t\t\ttooltip: 'Allows custom selection of which spells to use, dot managment and CD usage.',\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'useSmartCooldowns',\n\t\t\tlabel: 'Smart Cooldowns usage',\n\t\t\tlabelTooltip: 'The rotation will use cooldowns during eclipses, avoiding Haste CDs in solar and Crit CDs in lunar',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecBalanceDruid, MfUsage>({\n\t\t\tfieldName: 'mfUsage',\n\t\t\tlabel: 'Moonfire Usage',\n\t\t\tlabelTooltip: 'Defines how Moonfire will be used in the rotation.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Unused', value: MfUsage.NoMf },\n\t\t\t\t{ name: 'Before lunar', value: MfUsage.BeforeLunar },\n\t\t\t\t{ name: 'Maximize', value: MfUsage.MaximizeMf },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecBalanceDruid, IsUsage>({\n\t\t\tfieldName: 'isUsage',\n\t\t\tlabel: 'Insect Swarm Usage',\n\t\t\tlabelTooltip: 'Defines how Insect Swarm will be used in the rotation.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Unused', value: IsUsage.NoIs },\n\t\t\t\t{ name: 'Before solar', value: IsUsage.BeforeSolar },\n\t\t\t\t{ name: 'Maximize', value: IsUsage.MaximizeIs },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'useStarfire',\n\t\t\tlabel: 'Use Starfire',\n\t\t\tlabelTooltip: 'Should the rotation use Starfire.',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'useWrath',\n\t\t\tlabel: 'Use Wrath',\n\t\t\tlabelTooltip: 'Should the rotation use Wrath.',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'useTyphoon',\n\t\t\tlabel: 'Use Typhoon',\n\t\t\tlabelTooltip: 'Should the rotation use Typhoon.',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'useHurricane',\n\t\t\tlabel: 'Use Hurricane',\n\t\t\tlabelTooltip: 'Should the rotation use Hurricane.',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'useBattleRes',\n\t\t\tlabel: 'Use Battle Res',\n\t\t\tlabelTooltip: 'Cast Battle Res on an ally sometime during the encounter.',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'playerLatency',\n\t\t\tlabel: 'Player latency',\n\t\t\tlabelTooltip: 'Time before the player reacts to an eclipse proc, in milliseconds.',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecBalanceDruid, EclipsePrio>({\n\t\t\tfieldName: 'eclipsePrio',\n\t\t\tlabel: 'Eclipse priority',\n\t\t\tlabelTooltip: 'Defines which eclipse will get prioritized in the rotation.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Lunar', value: EclipsePrio.Lunar },\n\t\t\t\t{ name: 'Solar', value: EclipsePrio.Solar },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'multidotIs',\n\t\t\tlabel: 'Mutlti-dot Insect Swarm',\n\t\t\tlabelTooltip: 'Should the rotation mutlti-dot Insect Swarm',\n\t\t\tshowWhen: (player: Player<Spec.SpecBalanceDruid>) => player.getRotation().isUsage == IsUsage.MaximizeIs,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecBalanceDruid>({\n\t\t\tfieldName: 'eclipseShuffling',\n\t\t\tlabel: 'Eclipse Shuffling',\n\t\t\tlabelTooltip: 'Should the rotation alternate Starfire and Wrath when both eclipses are available.',\n\t\t}),\n\t],\n};\n","import {\n\tConsumes,\n\tDebuffs,\n\tEquipmentSpec,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tPotions,\n\tRaidBuffs,\n\tRaidTarget,\n\tTristateEffect\n} from '../core/proto/common.js';\nimport {SavedTalents} from '../core/proto/ui.js';\n\nimport {\n\tBalanceDruid_Options as BalanceDruidOptions,\n\tBalanceDruid_Rotation as BalanceDruidRotation,\n\tBalanceDruid_Rotation_IsUsage,\n\tBalanceDruid_Rotation_MfUsage,\n\tBalanceDruid_Rotation_Type as RotationType,\n\tDruidMajorGlyph,\n\tDruidMinorGlyph,\n} from '../core/proto/druid.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\nimport {NO_TARGET} from \"../core/proto_utils/utils\";\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5032003115331303213305311231--205003012',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfFocus,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t}),\n\t}),\n};\n\nexport const DefaultRotation = BalanceDruidRotation.create({\n\ttype: RotationType.Adaptive,\n\tmaintainFaerieFire: true,\n\tuseSmartCooldowns: true,\n\tmfUsage: BalanceDruid_Rotation_MfUsage.NoMf,\n\tisUsage: BalanceDruid_Rotation_IsUsage.MaximizeIs,\n\tuseStarfire:       true,\n\tuseWrath:          true,\n\tuseBattleRes: false,\n\tplayerLatency: 200,\n});\n\nexport const DefaultOptions = BalanceDruidOptions.create({\n\tinnervateTarget: RaidTarget.create({\n\t\ttargetIndex: NO_TARGET,\n\t}),\n});\n\nexport const DefaultConsumes = Consumes.create({\n    defaultPotion: Potions.PotionOfSpeed,\n    flask: Flask.FlaskOfTheFrostWyrm,\n    food: Food.FoodFishFeast,\n    prepopPotion: Potions.PotionOfWildMagic,\n    thermalSapper: true,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tsanctifiedRetribution: true,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DefaultPartyBuffs = PartyBuffs.create({\n\theroicPresence: false,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n\tshadowMastery: true,\n\tsunderArmor: true,\n\ttotemOfWrath: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 18,\n};\n\nexport const P2_PRESET = {\n\tname: 'P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(` {\n      \"items\": [\n        {\n          \"id\": 45497,\n          \"enchant\": 3820,\n          \"gems\": [\n            41285,\n            42144\n          ]\n        },\n        {\n          \"id\": 45133,\n          \"gems\": [\n            40048\n          ]\n        },\n        {\n          \"id\": 46196,\n          \"enchant\": 3810,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 45242,\n          \"enchant\": 3859,\n          \"gems\": [\n            40048\n          ]\n        },\n        {\n          \"id\": 45519,\n          \"enchant\": 3832,\n          \"gems\": [\n            40051,\n            42144,\n            40026\n          ]\n        },\n        {\n          \"id\": 45446,\n          \"enchant\": 2332,\n          \"gems\": [\n            42144,\n            0\n          ]\n        },\n        {\n          \"id\": 45665,\n          \"enchant\": 3604,\n          \"gems\": [\n            39998,\n            39998,\n            0\n          ]\n        },\n        {\n          \"id\": 45619,\n          \"gems\": [\n            39998,\n            39998,\n            39998\n          ]\n        },\n        {\n          \"id\": 46192,\n          \"enchant\": 3719,\n          \"gems\": [\n            39998,\n            39998\n          ]\n        },\n        {\n          \"id\": 45537,\n          \"enchant\": 3606,\n          \"gems\": [\n            39998,\n            40026\n          ]\n        },\n        {\n          \"id\": 46046,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 45495,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 45466\n        },\n        {\n          \"id\": 45518\n        },\n        {\n          \"id\": 45620,\n          \"enchant\": 3834,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 45617\n        },\n        {\n          \"id\": 40321\n        }\n      ]\n    }`),\n};\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40467,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44661,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40470,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44005,\n\t\t\t\"enchant\": 3859,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40469,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t42144,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44008,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40466,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40561,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40560,\n\t\t\t\"enchant\": 3719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40519,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40399\n\t\t},\n\t\t{\n\t\t\t\"id\": 40080\n\t\t},\n\t\t{\n\t\t\t\"id\": 40255\n\t\t},\n\t\t{\n\t\t\t\"id\": 40432\n\t\t},\n\t\t{\n\t\t\t\"id\": 40395,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 40192\n\t\t},\n\t\t{\n\t\t\t\"id\": 40321\n\t\t}\n\t]}`),\n};\n\nexport const PRE_RAID_PRESET = {\n\tname: 'Pre-raid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 42554,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40680\n\t\t},\n\t\t{\n\t\t\t\"id\": 37673,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 41610,\n\t\t\t\"enchant\": 3859\n\t\t},\n\t\t{\n\t\t\t\"id\": 39547,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t42144,\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37884,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39544,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t42144,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40696,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t40014,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37854,\n\t\t\t\"enchant\": 3719\n\t\t},\n\t\t{\n\t\t\t\"id\": 44202,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40585\n\t\t},\n\t\t{\n\t\t\t\"id\": 43253,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37873\n\t\t},\n\t\t{\n\t\t\t\"id\": 40682\n\t\t},\n\t\t{\n\t\t\t\"id\": 45085,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 40698\n\t\t},\n\t\t{\n\t\t\t\"id\": 40712\n\t\t}\n\t]}`),\n};\n\n","import { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as DruidInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class BalanceDruidSimUI extends IndividualSimUI<Spec.SpecBalanceDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecBalanceDruid>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'balance-druid-sim-ui',\n\t\t\tcssScheme: 'druid',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.38,\n\t\t\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.69,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.77,\n\t\t\t\t\t[Stat.StatMP5]: 0.00,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\t\t\tpartyBuffs: Presets.DefaultPartyBuffs,\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\t\t\t\tother: Presets.OtherDefaults,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tDruidInputs.SelfInnervate,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: DruidInputs.BalanceDruidRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.MeleeHasteBuff,\n\t\t\t\tIconInputs.MeleeCritBuff,\n\t\t\t\tIconInputs.AttackPowerPercentBuff,\n\t\t\t\tIconInputs.AttackPowerBuff,\n\t\t\t\tIconInputs.MajorArmorDebuff,\n\t\t\t\tIconInputs.MinorArmorDebuff,\n\t\t\t\tIconInputs.PhysicalDamageDebuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRE_RAID_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t\tPresets.P2_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["SelfInnervate","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","innervateTarget","targetIndex","NO_TARGET","setValue","eventID","newValue","newOptions","RaidTarget","create","setSpecOptions","BalanceDruidRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","labelTooltip","values","name","value","RotationType","Adaptive","tooltip","Manual","InputHelpers.makeRotationBooleanInput","showWhen","getRotation","type","MfUsage","NoMf","BeforeLunar","MaximizeMf","IsUsage","NoIs","BeforeSolar","MaximizeIs","InputHelpers.makeRotationNumberInput","EclipsePrio","Lunar","Solar","isUsage","StandardTalents","data","SavedTalents","talentsString","glyphs","Glyphs","major1","DruidMajorGlyph","GlyphOfFocus","major2","GlyphOfInsectSwarm","major3","GlyphOfStarfall","minor1","DruidMinorGlyph","GlyphOfTyphoon","minor2","GlyphOfUnburdenedRebirth","minor3","GlyphOfTheWild","DefaultRotation","BalanceDruidRotation","maintainFaerieFire","useSmartCooldowns","mfUsage","BalanceDruid_Rotation_MfUsage","BalanceDruid_Rotation_IsUsage","useStarfire","useWrath","useBattleRes","playerLatency","DefaultOptions","BalanceDruidOptions","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","prepopPotion","PotionOfWildMagic","thermalSapper","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","icyTalons","moonkinAura","leaderOfThePack","powerWordFortitude","sanctifiedRetribution","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfWisdom","vampiricTouch","DefaultPartyBuffs","PartyBuffs","heroicPresence","DefaultDebuffs","Debuffs","bloodFrenzy","ebonPlaguebringer","faerieFire","heartOfTheCrusader","judgementOfWisdom","shadowMastery","sunderArmor","totemOfWrath","OtherDefaults","distanceFromTarget","P2_PRESET","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","PRE_RAID_PRESET","BalanceDruidSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","Presets.DefaultPartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","DruidInputs.SelfInnervate","rotationInputs","DruidInputs.BalanceDruidRotationConfig","includeBuffDebuffInputs","IconInputs.MeleeHasteBuff","IconInputs.MeleeCritBuff","IconInputs.AttackPowerPercentBuff","IconInputs.AttackPowerBuff","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.DistanceFromTarget","encounterPicker","showExecuteProportion","presets","Presets.PRE_RAID_PRESET","Presets.P2_PRESET"],"mappings":"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"}