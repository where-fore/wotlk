{"version":3,"file":"sim-c8d8089f.chunk.js","sources":["../../../ui/mage/presets.ts","../../../ui/mage/inputs.ts","../../../ui/mage/sim.ts"],"sourcesContent":["import { Conjured } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { ItemSpec } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Faction } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport { Player } from '../core/player.js';\nimport { NO_TARGET } from '../core/proto_utils/utils';\n\nimport {\n\tMage,\n\tMageTalents as MageTalents,\n\tMage_Rotation as MageRotation,\n\tMage_Rotation_Type as RotationType,\n\tMage_Rotation_PrimaryFireSpell as PrimaryFireSpell,\n\tMage_Rotation_AoeRotation as AoeRotationSpells,\n\tMage_Options as MageOptions,\n\tMage_Options_ArmorType as ArmorType,\n\tMageMajorGlyph,\n\tMageMinorGlyph,\n} from '../core/proto/mage.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const ArcaneTalents = {\n\tname: 'Arcane',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23000513310033015032310250532-03-023303001',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfArcaneBlast,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfArcaneMissiles,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n};\nexport const FireTalents = {\n\tname: 'Fire',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23000503110003-0055030012303331053120301351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFireball,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfLivingBomb,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n};\nexport const FrostfireTalents = {\n\tname: 'Frostfire',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-2305030012303331053120311351-023303031002',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFrostfire,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfLivingBomb,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n}\nexport const FrostTalents = {\n\tname: 'Frost',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23000503110003--0533030310233100030152231351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFrostbolt,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfEternalWater,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n};\n\nexport const DefaultFireRotation = MageRotation.create({\n\ttype: RotationType.Fire,\n\tprimaryFireSpell: PrimaryFireSpell.Fireball,\n\tmaintainImprovedScorch: false,\n\tpyroblastDelayMs: 50,\n});\n\nexport const DefaultFireOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n\tfocusMagicPercentUptime: 99,\n\tfocusMagicTarget: RaidTarget.create({\n\t\ttargetIndex: NO_TARGET,\n\t}),\n\treactionTimeMs: 300,\n\tigniteMunching: true,\n});\n\nexport const DefaultFireConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFirecrackerSalmon,\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredFlameCap,\n});\n\nexport const DefaultFrostRotation = MageRotation.create({\n\ttype: RotationType.Frost,\n\twaterElementalDisobeyChance: 0.1,\n});\n\nexport const DefaultFrostOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n\tfocusMagicTarget: RaidTarget.create({\n\t\ttargetIndex: NO_TARGET,\n\t}),\n\treactionTimeMs: 300,\n});\n\nexport const DefaultFrostConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredFlameCap,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const DefaultArcaneRotation = MageRotation.create({\n\ttype: RotationType.Arcane,\n\tonly3ArcaneBlastStacksBelowManaPercent: 0.15,\n\tblastWithoutMissileBarrageAboveManaPercent: 0.2,\n\textraBlastsDuringFirstAp: 0,\n\tmissileBarrageBelowArcaneBlastStacks: 0,\n\tmissileBarrageBelowManaPercent: 0,\n});\n\nexport const DefaultArcaneOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n\tfocusMagicPercentUptime: 99,\n\tfocusMagicTarget: RaidTarget.create({\n\t\ttargetIndex: NO_TARGET,\n\t}),\n\treactionTimeMs: 300,\n});\n\nexport const DefaultArcaneConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredDarkRune,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFirecrackerSalmon,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 25,\n};\n\nexport const ARCANE_PRERAID_PRESET = {\n\tname: \"Arcane Preraid Preset\",\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42553,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39472\n\t\t},\n\t\t{\n\t\t\t\"id\": 37673,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 41610,\n\t\t\t\"enchant\": 3722\n\t\t},\n\t\t{\n\t\t\t\"id\": 39492,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37361,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39495,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40696,\n\t\t\t\"gems\": [\n\t\t\t\t40049,\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37854,\n\t\t\t\"enchant\": 3719\n\t\t},\n\t\t{\n\t\t\t\"id\": 44202,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40585\n\t\t},\n\t\t{\n\t\t\t\"id\": 37694\n\t\t},\n\t\t{\n\t\t\t\"id\": 37873\n\t\t},\n\t\t{\n\t\t\t\"id\": 40682\n\t\t},\n\t\t{\n\t\t\t\"id\": 37360,\n\t\t\t\"enchant\": 3854\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 37238\n\t\t}\n\t]}`),\n};\n\nexport const FIRE_PRERAID_PRESET = {\n\tname: \"Fire Preraid Preset\",\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Fire,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42553,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39472\n\t\t},\n\t\t{\n\t\t\t\"id\": 34210,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t40049,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 41610,\n\t\t\t\"enchant\": 3859\n\t\t},\n\t\t{\n\t\t\t\"id\": 39492,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t40049,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37361,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39495,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40049,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40696,\n\t\t\t\"gems\": [\n\t\t\t\t40014,\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37854,\n\t\t\t\"enchant\": 3719\n\t\t},\n\t\t{\n\t\t\t\"id\": 44202,\n\t\t\t\"enchant\": 3826,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40585\n\t\t},\n\t\t{\n\t\t\t\"id\": 42644,\n\t\t\t\"gems\": [\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37873\n\t\t},\n\t\t{\n\t\t\t\"id\": 40682\n\t\t},\n\t\t{\n\t\t\t\"id\": 45085,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 40698\n\t\t},\n\t\t{\n\t\t\t\"id\": 37177\n\t\t}\n\t]}`),\n};\n\nexport const ARCANE_P1_PRESET = {\n\tname: 'Arcane P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40416,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44661,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40419,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t40051\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44005,\n\t\t\t\"enchant\": 3722,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44002,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44008,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40415,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40561,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40417,\n\t\t\t\"enchant\": 3719,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40051\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40558,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40399\n\t\t},\n\t\t{\n\t\t\t\"id\": 39229\n\t\t},\n\t\t{\n\t\t\t\"id\": 40255\n\t\t},\n\t\t{\n\t\t\t\"id\": 40396,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 40273\n\t\t},\n\t\t{\n\t\t\t\"id\": 39426\n\t\t}\n\t]}`),\n};\n\nexport const FIRE_P1_PRESET = {\n\tname: 'Fire P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Fire,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40416,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44661,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40419,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44005,\n\t\t\t\"enchant\": 3722,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40418,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40048\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44008,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40415,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40301,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40560,\n\t\t\t\"enchant\": 3719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40246,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40399\n\t\t},\n\t\t{\n\t\t\t\"id\": 40719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40255\n\t\t},\n\t\t{\n\t\t\t\"id\": 40432\n\t\t},\n\t\t{\n\t\t\t\"id\": 40396,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 40273\n\t\t},\n\t\t{\n\t\t\t\"id\": 39712\n\t\t}\n\t]}`),\n};\n\nexport const FROST_P1_PRESET = {\n\tname: 'Frost P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Frost,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40416,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44661,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40419,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t40051\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44005,\n\t\t\t\"enchant\": 3722,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40418,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40048\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44008,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40415,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40301,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40560,\n\t\t\t\"enchant\": 3719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40558,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40399\n\t\t},\n\t\t{\n\t\t\t\"id\": 40719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40255\n\t\t},\n\t\t{\n\t\t\t\"id\": 40432\n\t\t},\n\t\t{\n\t\t\t\"id\": 40396,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 39766\n\t\t},\n\t\t{\n\t\t\t\"id\": 39712\n\t\t}\n\t]}`),\n};\n\nexport const ARCANE_P2_PRESET = {\n\tname: 'Arcane P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 45497,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t45883\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45243,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46134,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45618,\n\t\t\t\"enchant\": 3722,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46130,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45446,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45665,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45619,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45488,\n\t\t\t\"enchant\": 3719,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40051,\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45135,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46046,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45495,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45466\n\t\t},\n\t\t{\n\t\t\t\"id\": 45518\n\t\t},\n\t\t{\n\t\t\t\"id\": 45620,\n\t\t\t\"enchant\": 3834,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45617\n\t\t},\n\t\t{\n\t\t\t\"id\": 45294,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t}\n\t]}`),\n};\n\nexport const FIRE_P2_PRESET = {\n\tname: 'Fire P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Fire,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 46129,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t45883\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45133,\n\t\t\t\"gems\": [\n\t\t\t\t40048\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46134,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45242,\n\t\t\t\"enchant\": 3722,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46130,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45446,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45665,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40026,\n\t\t\t\t40048,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45619,\n\t\t\t\"gems\": [\n\t\t\t\t40048,\n\t\t\t\t40048,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46133,\n\t\t\t\"enchant\": 3719,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45537,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45495,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46046,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45466\n\t\t},\n\t\t{\n\t\t\t\"id\": 45518\n\t\t},\n\t\t{\n\t\t\t\"id\": 45620,\n\t\t\t\"enchant\": 3834,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45617\n\t\t},\n\t\t{\n\t\t\t\"id\": 45294,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t}\n\t]}`),\n};\n\nexport const FROST_P2_PRESET = {\n\tname: 'Frost P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Frost,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 45497,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41285,\n\t\t\t\t45883\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45133,\n\t\t\t\"gems\": [\n\t\t\t\t40051\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46134,\n\t\t\t\"enchant\": 3810,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45618,\n\t\t\t\"enchant\": 3722,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46130,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45446,\n\t\t\t\"enchant\": 2332,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45665,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45619,\n\t\t\t\"gems\": [\n\t\t\t\t40049,\n\t\t\t\t40049,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45488,\n\t\t\t\"enchant\": 3719,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40051,\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45135,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t40049\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46046,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45495,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45466\n\t\t},\n\t\t{\n\t\t\t\"id\": 45518\n\t\t},\n\t\t{\n\t\t\t\"id\": 45620,\n\t\t\t\"enchant\": 3834,\n\t\t\t\"gems\": [\n\t\t\t\t40026\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45617\n\t\t},\n\t\t{\n\t\t\t\"id\": 45294,\n\t\t\t\"gems\": [\n\t\t\t\t39998\n\t\t\t]\n\t\t}\n\t]}`),\n};\n","import { IconPickerConfig } from '../core/components/icon_picker.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { Target } from '../core/target.js';\n\nimport {\n\tMage,\n\tMageTalents as MageTalents,\n\tMage_Rotation as MageRotation,\n\tMage_Rotation_Type as RotationType,\n\tMage_Rotation_PrimaryFireSpell as PrimaryFireSpell,\n\tMage_Rotation_AoeRotation as AoeRotationSpells,\n\tMage_Options as MageOptions,\n\tMage_Options_ArmorType as ArmorType,\n} from '../core/proto/mage.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\nimport * as Presets from './presets.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Armor = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecMage, ArmorType>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: ArmorType.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: ActionId.fromSpellId(43024), value: ArmorType.MageArmor },\n\t\t{ actionId: ActionId.fromSpellId(43046), value: ArmorType.MoltenArmor },\n\t],\n});\n\nexport const IgniteMunching = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecMage>({\n\tfieldName: 'igniteMunching',\n\tlabel: 'Ignite Munching',\n\tlabelTooltip: `\n\t\t<p>When two spells crit at the same time, only the latter spell will count towards ignite.</p>\n\t\t<p>For example when an instant pyroblast lands right after a fireball, or when Living Bomb explodes at the same time as another spell lands on the target.</p>\n\t\t<p>However, this does not affect Hot Streak with Frostfire Bolt due to Frostfire Bolt having a faster travel time. </p>\n\t`,\n\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Fire,\n\tchangeEmitter: (player: Player<Spec.SpecMage>) => player.rotationChangeEmitter,\n});\n\nexport const EvocationTicks = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecMage>({\n\tfieldName: 'evocationTicks',\n\tlabel: '# Evocation Ticks',\n\tlabelTooltip: 'The number of ticks of Evocation to use, or 0 to use the full duration.',\n});\n\nexport const FocusMagicUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecMage>({\n\tfieldName: 'focusMagicPercentUptime',\n\tlabel: 'Focus Magic Percent Uptime',\n\tlabelTooltip: 'Percent of uptime for Focus Magic Buddy',\n\textraCssClasses: ['within-raid-sim-hide'],\n});\n\nexport const ReactionTime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecMage>({\n\tfieldName: 'reactionTimeMs',\n\tlabel: 'Reaction Time (ms)',\n\tlabelTooltip: 'Duration, in milliseconds, for player reaction time. Only used for a few effects (Missile Barrage / Hot Streak / Brain Freeze).',\n});\n\nexport const MageRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecMage, RotationType>({\n\t\t\tfieldName: 'type',\n\t\t\tlabel: 'Spec',\n\t\t\tlabelTooltip: 'Switches between spec rotation settings. Will also update talents to defaults for the selected spec.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Arcane', value: RotationType.Arcane },\n\t\t\t\t{ name: 'Fire', value: RotationType.Fire },\n\t\t\t\t{ name: 'Frost', value: RotationType.Frost },\n\t\t\t],\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecMage>, newValue: number) => {\n\t\t\t\tconst newRotation = player.getRotation();\n\t\t\t\tnewRotation.type = newValue;\n\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tif (newRotation.type == RotationType.Arcane) {\n\t\t\t\t\t\tplayer.setTalentsString(eventID, Presets.ArcaneTalents.data.talentsString);\n\t\t\t\t\t\tplayer.setGlyphs(eventID, Presets.ArcaneTalents.data.glyphs!);\n\t\t\t\t\t} else if (newRotation.type == RotationType.Fire) {\n\t\t\t\t\t\tplayer.setTalentsString(eventID, Presets.FireTalents.data.talentsString);\n\t\t\t\t\t\tplayer.setGlyphs(eventID, Presets.FireTalents.data.glyphs!);\n\t\t\t\t\t} else if (newRotation.type == RotationType.Frost) {\n\t\t\t\t\t\tplayer.setTalentsString(eventID, Presets.FrostTalents.data.talentsString);\n\t\t\t\t\t\tplayer.setGlyphs(eventID, Presets.FrostTalents.data.glyphs!);\n\t\t\t\t\t}\n\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t\t});\n\t\t\t},\n\t\t}),\n\t\t// ********************************************************\n\t\t//                        AOE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecMage, AoeRotationSpells>({\n\t\t\tfieldName: 'aoe',\n\t\t\tlabel: 'Primary Spell',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Arcane Explosion', value: AoeRotationSpells.ArcaneExplosion },\n\t\t\t\t{ name: 'Flamestrike', value: AoeRotationSpells.Flamestrike },\n\t\t\t\t{ name: 'Blizzard', value: AoeRotationSpells.Blizzard },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Aoe,\n\t\t}),\n\t\t// ********************************************************\n\t\t//                       FIRE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecMage, PrimaryFireSpell>({\n\t\t\tfieldName: 'primaryFireSpell',\n\t\t\tlabel: 'Primary Spell',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Fireball', value: PrimaryFireSpell.Fireball },\n\t\t\t\t{ name: 'Frostfire Bolt', value: PrimaryFireSpell.FrostfireBolt },\n\t\t\t\t{ name: 'Scorch', value: PrimaryFireSpell.Scorch },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Fire,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'pyroblastDelayMs',\n\t\t\tlabel: 'Pyroblast Delay (ms)',\n\t\t\tlabelTooltip: `\n\t\t\t\t<p>Adds a delay to Pyroblast after a Hot Streak to prevent ignite munching. 50ms is a good default for this.</p>\n\t\t\t\t<p>There is no way to do this perfectly in-game, but a cqs macro can do this with about 70-90% reliability.</p>\n\t\t\t`,\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Fire && player.getRotation().primaryFireSpell == PrimaryFireSpell.Fireball && player.getSpecOptions().igniteMunching,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.specOptionsChangeEmitter]),\n\t\t}),\n\t\t// ********************************************************\n\t\t//                       FROST INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecMage>({\n\t\t\tfieldName: 'useIceLance',\n\t\t\tlabel: 'Use Ice Lance',\n\t\t\tlabelTooltip: 'Casts Ice Lance at the end of Fingers of Frost, after using Deep Freeze.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Frost,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'waterElementalDisobeyChance',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Water Ele Disobey %',\n\t\t\tlabelTooltip: 'Percent of Water Elemental actions which will fail. This represents the Water Elemental moving around or standing still instead of casting.',\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Frost,\n\t\t\tenableWhen: (player: Player<Spec.SpecMage>) => player.getTalents().summonWaterElemental,\n\t\t}),\n\t\t// ********************************************************\n\t\t//                      ARCANE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'only3ArcaneBlastStacksBelowManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Stack Arcane Blast to 3 below mana %',\n\t\t\tlabelTooltip: 'When below this mana %, AM/ABarr will be used at 3 stacks of AB instead of 4.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'blastWithoutMissileBarrageAboveManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'AB without Missile Barrage above mana %',\n\t\t\tlabelTooltip: 'When above this mana %, spam AB until a Missile Barrage proc occurs.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'extraBlastsDuringFirstAp',\n\t\t\tlabel: 'Extra ABs during first AP',\n\t\t\tlabelTooltip: 'Extend AB streak by this mana casts, during the first Arcane Power CD duration.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'missileBarrageBelowArcaneBlastStacks',\n\t\t\tlabel: 'Use Missile Barrage below n AB stacks',\n\t\t\tlabelTooltip: 'Setting this to 1 or 2 can potentially be a DPS increase with Arcane Barrage rotation or T8 4pc set bonus.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'missileBarrageBelowManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Use Missile Barrage ASAP below mana %',\n\t\t\tlabelTooltip: 'When below this mana %, use Missile Barrage proc as soon as possible. Can be useful to conserve mana.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecMage>({\n\t\t\tfieldName: 'useArcaneBarrage',\n\t\t\tlabel: 'Use Arcane Barrage',\n\t\t\tlabelTooltip: 'Includes Arcane Barrage in the rotation.',\n\t\t\tenableWhen: (player: Player<Spec.SpecMage>) => player.getTalents().arcaneBarrage,\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getRotation().type == RotationType.Arcane,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecMage>({\n\t\t\tfieldName: 'maintainImprovedScorch',\n\t\t\tlabel: 'Maintain Imp. Scorch',\n\t\t\tlabelTooltip: 'Always use Scorch when below 5 stacks, or < 4s remaining on debuff.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalents().improvedScorch > 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t],\n};\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\n\nimport {\n\tMage,\n\tMage_Rotation as MageRotation,\n\tMage_Rotation_Type as RotationType,\n\tMageTalents as MageTalents,\n\tMage_Options as MageOptions,\n} from '../core/proto/mage.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as MageInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class MageSimUI extends IndividualSimUI<Spec.SpecMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecMage>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'mage-sim-ui',\n\t\t\tcssScheme: 'mage',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatMana,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecMage>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tif (player.getRotation().type == RotationType.Arcane) {\n\t\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().arcaneFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.ARCANE_P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t\t\t[Stat.StatMP5]: 0.09,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultArcaneConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultArcaneRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.ArcaneTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultArcaneOptions,\n\t\t\t\tother: Presets.OtherDefaults,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tmanaSpringTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\twrathOfAirTotem: true,\n\t\t\t\t\tdivineSpirit: true,\n\t\t\t\t\tswiftRetribution: true,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tdemonicPact: 2500,\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t\tmanaTideTotems: 1,\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tinnervates: 0,\n\t\t\t\t\tvampiricTouch: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tcurseOfElements: true,\n\t\t\t\t\tshadowMastery: true,\n\t\t\t\t\theartOfTheCrusader: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tMageInputs.Armor,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: MageInputs.MageRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\t//Should add hymn of hope, revitalize, and \n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tMageInputs.IgniteMunching,\n\t\t\t\t\tMageInputs.EvocationTicks,\n\t\t\t\t\tMageInputs.FocusMagicUptime,\n\t\t\t\t\tMageInputs.ReactionTime,\n\t\t\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: true,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.ArcaneTalents,\n\t\t\t\t\tPresets.FireTalents,\n\t\t\t\t\tPresets.FrostfireTalents,\n\t\t\t\t\tPresets.FrostTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.ARCANE_PRERAID_PRESET,\n\t\t\t\t\tPresets.ARCANE_P1_PRESET,\n\t\t\t\t\tPresets.ARCANE_P2_PRESET,\n\t\t\t\t\tPresets.FIRE_PRERAID_PRESET,\n\t\t\t\t\tPresets.FIRE_P1_PRESET,\n\t\t\t\t\tPresets.FIRE_P2_PRESET,\n\t\t\t\t\tPresets.FROST_P1_PRESET,\n\t\t\t\t\tPresets.FROST_P2_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["ArcaneTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MageMajorGlyph","GlyphOfArcaneBlast","major2","GlyphOfArcaneMissiles","major3","GlyphOfMoltenArmor","minor1","MageMinorGlyph","GlyphOfSlowFall","minor2","GlyphOfFrostWard","minor3","GlyphOfBlastWave","FireTalents","GlyphOfFireball","GlyphOfLivingBomb","FrostfireTalents","GlyphOfFrostfire","FrostTalents","GlyphOfFrostbolt","GlyphOfEternalWater","DefaultFireRotation","MageRotation","type","RotationType","Fire","primaryFireSpell","PrimaryFireSpell","Fireball","maintainImprovedScorch","pyroblastDelayMs","DefaultFireOptions","MageOptions","armor","ArmorType","MoltenArmor","focusMagicPercentUptime","focusMagicTarget","RaidTarget","targetIndex","NO_TARGET","reactionTimeMs","igniteMunching","DefaultFireConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFirecrackerSalmon","defaultPotion","Potions","PotionOfSpeed","defaultConjured","Conjured","ConjuredFlameCap","DefaultFrostRotation","Frost","waterElementalDisobeyChance","DefaultFrostOptions","DefaultFrostConsumes","FoodFishFeast","DefaultArcaneRotation","Arcane","only3ArcaneBlastStacksBelowManaPercent","blastWithoutMissileBarrageAboveManaPercent","extraBlastsDuringFirstAp","missileBarrageBelowArcaneBlastStacks","missileBarrageBelowManaPercent","DefaultArcaneOptions","DefaultArcaneConsumes","ConjuredDarkRune","OtherDefaults","distanceFromTarget","ARCANE_PRERAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","player","getRotation","gear","EquipmentSpec","fromJsonString","FIRE_PRERAID_PRESET","ARCANE_P1_PRESET","FIRE_P1_PRESET","FROST_P1_PRESET","ARCANE_P2_PRESET","FIRE_P2_PRESET","FROST_P2_PRESET","Armor","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","NoArmor","actionId","ActionId","fromSpellId","MageArmor","IgniteMunching","InputHelpers.makeSpecOptionsBooleanInput","label","labelTooltip","showWhen","changeEmitter","rotationChangeEmitter","EvocationTicks","InputHelpers.makeSpecOptionsNumberInput","FocusMagicUptime","extraCssClasses","ReactionTime","MageRotationConfig","inputs","InputHelpers.makeRotationEnumInput","setValue","eventID","newValue","newRotation","TypedEvent","freezeAllAndDo","setTalentsString","Presets.ArcaneTalents","setGlyphs","Presets.FireTalents","Presets.FrostTalents","setRotation","AoeRotationSpells","ArcaneExplosion","Flamestrike","Blizzard","Aoe","FrostfireBolt","Scorch","InputHelpers.makeRotationNumberInput","getSpecOptions","onAny","specOptionsChangeEmitter","InputHelpers.makeRotationBooleanInput","percent","talentsChangeEmitter","getTalents","summonWaterElemental","arcaneBarrage","improvedScorch","MageSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","arcaneFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","Presets.ARCANE_P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultArcaneConsumes","rotation","Presets.DefaultArcaneRotation","specOptions","Presets.DefaultArcaneOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","manaSpringTotem","wrathOfAirTotem","divineSpirit","swiftRetribution","sanctifiedRetribution","demonicPact","moonkinAura","arcaneBrilliance","partyBuffs","PartyBuffs","manaTideTotems","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","innervates","vampiricTouch","debuffs","Debuffs","judgementOfWisdom","misery","curseOfElements","shadowMastery","heartOfTheCrusader","playerIconInputs","MageInputs.Armor","rotationInputs","MageInputs.MageRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","MageInputs.IgniteMunching","MageInputs.EvocationTicks","MageInputs.FocusMagicUptime","MageInputs.ReactionTime","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","Presets.FrostfireTalents","Presets.ARCANE_PRERAID_PRESET","Presets.ARCANE_P2_PRESET","Presets.FIRE_PRERAID_PRESET","Presets.FIRE_P1_PRESET","Presets.FIRE_P2_PRESET","Presets.FROST_P1_PRESET","Presets.FROST_P2_PRESET"],"mappings":"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"}