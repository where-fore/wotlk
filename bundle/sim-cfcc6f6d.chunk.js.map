{"version":3,"file":"sim-cfcc6f6d.chunk.js","sources":["../../../ui/enhancement_shaman/inputs.ts","../../../ui/enhancement_shaman/presets.ts","../../../ui/enhancement_shaman/sim.ts"],"sourcesContent":["import { BooleanPicker } from '../core/components/boolean_picker.js';\nimport { EnumPicker } from '../core/components/enum_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig } from '../core/components/icon_enum_picker.js';\nimport { IconPickerConfig } from '../core/components/icon_picker.js';\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tFireTotem,\n\tWaterTotem,\n\tEnhancementShaman_Options as ShamanOptions,\n\tShamanTotems,\n\tShamanShield,\n\tShamanImbue,\n\tShamanSyncType,\n\tEnhancementShaman_Rotation_PrimaryShock as PrimaryShock,\n\tEnhancementShaman_Rotation_RotationType as RotationType,\n\tEnhancementShaman_Rotation_CustomRotationSpell as CustomRotationSpell\n} from '../core/proto/shaman.js';\nimport { CustomSpell, Spec, ItemSwap, ItemSlot } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { Target } from '../core/target.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Bloodlust = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecEnhancementShaman>({\n\tfieldName: 'bloodlust',\n\tid: ActionId.fromSpellId(2825),\n});\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanShield>({\n\tfieldName: 'shield',\n\tvalues: [\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t{ actionId: ActionId.fromSpellId(57960), value: ShamanShield.WaterShield },\n\t\t{ actionId: ActionId.fromSpellId(49281), value: ShamanShield.LightningShield },\n\t],\n});\n\nexport const ShamanImbueMH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\n\tfieldName: 'imbueMh',\n\tvalues: [\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Main Hand Enchant' },\n\t\t{ actionId: ActionId.fromSpellId(58804), value: ShamanImbue.WindfuryWeapon },\n\t\t{ actionId: ActionId.fromSpellId(58790), value: ShamanImbue.FlametongueWeapon, text: 'R10'},\n\t\t{ actionId: ActionId.fromSpellId(58789), value: ShamanImbue.FlametongueWeaponDownrank, text: 'R9'},\n\t\t{ actionId: ActionId.fromSpellId(58796), value: ShamanImbue.FrostbrandWeapon },\n\t],\n});\n\nexport const ShamanImbueOH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\n\tfieldName: 'imbueOh',\n\tvalues: [\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Off Hand Enchant' },\n\t\t{ actionId: ActionId.fromSpellId(58804), value: ShamanImbue.WindfuryWeapon },\n\t\t{ actionId: ActionId.fromSpellId(58790), value: ShamanImbue.FlametongueWeapon, text: 'R10'},\n\t\t{ actionId: ActionId.fromSpellId(58789), value: ShamanImbue.FlametongueWeaponDownrank, text: 'R9'},\n\t\t{ actionId: ActionId.fromSpellId(58796), value: ShamanImbue.FrostbrandWeapon },\n\t],\n});\n\nexport const SyncTypeInput = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecEnhancementShaman, ShamanSyncType>({\n\tfieldName: 'syncType',\n\tlabel: 'Sync/Stagger Setting',\n\tlabelTooltip: 'Choose your sync or stagger option, Perfect Sync makes your weapons always attack at the same time, which is ideal for mixed imbues. Delayed Offhand is similar but additionally adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window, ideal for matched imbues.',\n\tvalues: [\n\t\t{ name: 'None', value: ShamanSyncType.NoSync },\n\t\t{ name: 'Perfect Sync', value: ShamanSyncType.SyncMainhandOffhandSwings },\n\t\t{ name: 'Delayed Offhand', value: ShamanSyncType.DelayOffhandSwings },\n\t],\n});\n\nexport const EnhancmentItemSwapInputs = InputHelpers.MakeItemSwapInput<Spec.SpecEnhancementShaman>({\n\tfieldName: 'itemSwap',\n\tvalues: [\n\t\tItemSlot.ItemSlotMainHand,\n\t\tItemSlot.ItemSlotOffHand,\n\t\t//ItemSlot.ItemSlotRanged, Not support yet\n\t],\n\tlabelTooltip: 'Start with the swapped items until Fire Elemntal has been summoned, swap back to normal gear set. Weapons come pre enchanted with FT9 and FT10. If a slot is empty it will not be used in the swap',\n\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => (player.getRotation().totems?.useFireElemental && player.getRotation().enableItemSwap) || false\n})\n\nexport const EnhancementShamanRotationConfig = {\n\tinputs:\n\t\t[\t\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'enableItemSwap',\n\t\t\t\tlabel: 'Enable Item Swapping',\n\t\t\t\tlabelTooltip: 'Toggle on/off item swapping',\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) =>  player.getRotation().totems?.useFireElemental || false\n\t\t\t}),\n\t\t\tEnhancmentItemSwapInputs,\n\t\t\tInputHelpers.makeRotationEnumInput<Spec.SpecEnhancementShaman, RotationType>({\n\t\t\t\tfieldName: 'rotationType',\n\t\t\t\tlabel: 'Type',\n\t\t\t\tlabelTooltip:\n\t\t\t\t\t`<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>Standard: Priority Rotation</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>Custom: Highest spell that is ready will be cast.</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>`,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ name: 'Standard', value: RotationType.Priority },\n\t\t\t\t\t{ name: 'Custom', value: RotationType.Custom },\n\t\t\t\t],\n\t\t\t}),\n\t\t\tInputHelpers.makeCustomRotationInput<Spec.SpecEnhancementShaman, CustomRotationSpell>({\n\t\t\t\tfieldName: 'customRotation',\n\t\t\t\tnumColumns: 2,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49238), value: CustomRotationSpell.LightningBolt},\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49238), value: CustomRotationSpell.LightningBoltWeave, text: \"Weave\" },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49238), value: CustomRotationSpell.LightningBoltDelayedWeave, text: \"Delay\" },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(17364), value: CustomRotationSpell.StormstrikeDebuffMissing, text: \"Debuff\"  },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(17364), value: CustomRotationSpell.Stormstrike },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49233), value: CustomRotationSpell.FlameShock },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49231), value: CustomRotationSpell.EarthShock },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(58734), value: CustomRotationSpell.MagmaTotem },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(61657), value: CustomRotationSpell.FireNova },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(60103), value: CustomRotationSpell.LavaLash },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49281), value: CustomRotationSpell.LightningShield },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(60043), value: CustomRotationSpell.LavaBurst, text: \"Weave\" },\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(49236), value: CustomRotationSpell.FrostShock},\n\t\t\t\t],\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType == RotationType.Custom,\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationEnumInput<Spec.SpecEnhancementShaman, PrimaryShock>({\n\t\t\t\tfieldName: 'primaryShock',\n\t\t\t\tlabel: 'Primary Shock',\n\t\t\t\tvalues: [\n\t\t\t\t\t{ name: 'None', value: PrimaryShock.None },\n\t\t\t\t\t{ name: 'Earth Shock', value: PrimaryShock.Earth },\n\t\t\t\t\t{ name: 'Frost Shock', value: PrimaryShock.Frost },\n\t\t\t\t],\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'weaveFlameShock',\n\t\t\t\tlabel: 'Weave Flame Shock',\n\t\t\t\tlabelTooltip: 'Use Flame Shock whenever the target does not already have the DoT.',\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\n\t\t\t}),\n            InputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\n                fieldName:  'flameShockClipTicks',\n                label:  'Refresh Flame Shock at ticks remaining',\n                labelTooltip: 'Set to 0 to require the debuff be missing. A tick is 3s, affected by spell haste',\n                enableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().weaveFlameShock,\n                showWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.FlameShock) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn player.getRotation().weaveFlameShock\n\t\t\t\t}\n            }),\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'lightningboltWeave',\n\t\t\t\tlabel: 'Enable Weaving Lightning Bolt',\n\t\t\t\tlabelTooltip: 'Will provide a DPS increase, but is harder to execute',\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getTalents().maelstromWeapon > 0,\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationEnumInput<Spec.SpecEnhancementShaman, number>({\n\t\t\t\tfieldName: 'maelstromweaponMinStack',\n\t\t\t\tlabel: 'Minimum Maelstrom Stacks to Weave',\n\t\t\t\tlabelTooltip: '3 stacks is the most realistic, however there are cases where lower might be possible, just much harder to do in practice',\n\t\t\t\tvalues: [\n\t\t\t\t\t{ name: '1', value: 1 },\n\t\t\t\t\t{ name: '2', value: 2 },\n\t\t\t\t\t{ name: '3', value: 3 },\n\t\t\t\t\t{ name: '4', value: 4 },\n\t\t\t\t],\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn player.getRotation().lightningboltWeave\n\t\t\t\t},\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}),\t\t\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'autoWeaveDelay',\n\t\t\t\tlabel: 'Weaving Delay After Auto Attack',\n\t\t\t\tlabelTooltip: 'The amount of time to wait after an auto attack before weaveing, in milliseconds',\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn player.getRotation().lightningboltWeave\n\t\t\t\t},\n\t\t\t\tshowWhen:  (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t}),InputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'delayGcdWeave',\n\t\t\t\tlabel: 'Delay LL to Weave',\n\t\t\t\tlabelTooltip: 'The amount of time to hold Lava Lash to weave in milliseconds. Setting to 0 will disable delaying',\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\n\t\t\t\t\treturn player.getRotation().lightningboltWeave\n\t\t\t\t},\n\t\t\t\tshowWhen:  (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'delayGcdWeave',\n\t\t\t\tlabel: 'Delay Weave Time',\n\t\t\t\tlabelTooltip: 'The amount of time to hold a GCD to weave in milliseconds. Setting to 0 will disable delaying',\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltDelayedWeave) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false\n\t\t\t\t},\n\t\t\t\tshowWhen:  (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltDelayedWeave) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false\n\t\t\t\t},\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({ \n\t\t\t\tfieldName: 'lavaburstWeave',\n\t\t\t\tlabel: 'Enable Weaving Lava Burst',\n\t\t\t\tlabelTooltip: 'Not particularily useful for dual wield, mostly a 2h option',\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().lightningboltWeave,\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'firenovaManaThreshold',\n\t\t\t\tlabel: 'Minimum mana to cast Fire Nova',\n\t\t\t\tlabelTooltip: 'Fire Nova will not be cast when mana is below this value. Set this medium-low, it has a bad mana-to-damage ratio',\n\t\t\t\tshowWhen:  (player: Player<Spec.SpecEnhancementShaman>) => {\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom){\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.FireNova) != undefined\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t}),\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\n\t\t\t\tfieldName: 'shamanisticRageManaThreshold',\n\t\t\t\tlabel: 'Mana % to use Shamanistic Rage',\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getTalents().shamanisticRage,\n\t\t\t}),\n\t\t],\n};\n\n\n","import {\n\tConsumes,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tEquipmentSpec,\n\tPotions,\n\tRaidBuffs,\n\tTristateEffect,\n\tDebuffs,\n  CustomRotation,\n  CustomSpell,\n  ItemSwap,\n  ItemSpec,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport { EnhancementShaman_Rotation as EnhancementShamanRotation, EnhancementShaman_Options as EnhancementShamanOptions, ShamanShield } from '../core/proto/shaman.js';\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tFireTotem,\n\tWaterTotem,\n\tShamanTotems,\n\tShamanImbue,\n\tShamanSyncType,\n\tShamanMajorGlyph,\n\tEnhancementShaman_Rotation_PrimaryShock as PrimaryShock,\n  EnhancementShaman_Rotation_RotationType as RotationType,\n  EnhancementShaman_Rotation_CustomRotationSpell as CustomRotationSpell\n} from '../core/proto/shaman.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '053030152-30405003105021333031131031051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfStormstrike,\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfFlametongueWeapon,\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfFeralSpirit,\n\t\t\t//minor glyphs dont affect damage done, all convenience/QoL\n\t\t})\n\t}),\n};\n\nexport const DefaultRotation = EnhancementShamanRotation.create({\n\ttotems: ShamanTotems.create({\n\t\tearth: EarthTotem.StrengthOfEarthTotem,\n\t\tair: AirTotem.WindfuryTotem,\n\t\tfire: FireTotem.MagmaTotem,\n\t\twater: WaterTotem.ManaSpringTotem,\n\t\tuseFireElemental: true,\n\t}),\n\tmaelstromweaponMinStack: 3,\n\tlightningboltWeave: true,\n\tautoWeaveDelay: 500,\n\tdelayGcdWeave: 750,\n\tlavaburstWeave: false,\n\tfirenovaManaThreshold: 3000,\n\tshamanisticRageManaThreshold: 25,\n\tprimaryShock: PrimaryShock.Earth,\n\tweaveFlameShock: true,\n  \trotationType: RotationType.Priority,\n  \tcustomRotation: CustomRotation.create({\n\t\t\tspells: [\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningBolt }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.StormstrikeDebuffMissing }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningBoltWeave }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.Stormstrike }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.FlameShock }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.EarthShock }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.MagmaTotem}),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningShield }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.FireNova }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningBoltDelayedWeave }),\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LavaLash }),\n\t\t],\n\t}),\n});\n\nexport const DefaultOptions = EnhancementShamanOptions.create({\n\tshield: ShamanShield.LightningShield,\n\tbloodlust: true,\n\timbueMh: ShamanImbue.WindfuryWeapon,\n\timbueOh: ShamanImbue.FlametongueWeapon,\n\tsyncType: ShamanSyncType.SyncMainhandOffhandSwings,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\ttotemOfWrath: true,\n\twrathOfAirTotem: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\tsanctifiedRetribution: true,\n\tdivineSpirit: true,\n\tbattleShout: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tsunderArmor: true,\n\tcurseOfWeakness: TristateEffect.TristateEffectRegular,\n\tcurseOfElements: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tjudgementOfWisdom: true,\n\tmisery: true,\n\ttotemOfWrath: true,\n\tshadowMastery: true,\n});\n\n\nexport const PreRaid_PRESET = {\n\tname: 'Preraid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 43311,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42156\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40678\n\t\t},\n\t\t{\n\t\t\t\"id\": 37373,\n\t\t\t\"enchant\": 3808\n\t\t},\n\t\t{\n\t\t\t\"id\": 37840,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 39597,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t40053,\n\t\t\t\t40088\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 43131,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39601,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40053,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37407,\n\t\t\t\"gems\": [\n\t\t\t\t42156\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37669,\n\t\t\t\"enchant\": 3823\n\t\t},\n\t\t{\n\t\t\t\"id\": 37167,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40053,\n\t\t\t\t42156\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37685\n\t\t},\n\t\t{\n\t\t\t\"id\": 37642\n\t\t},\n\t\t{\n\t\t\t\"id\": 37390\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 41384,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 40704,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 33507\n\t\t}\n\t]}`),\n}\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40543,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44661,\n\t\t\t\"gems\": [\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40524,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40403,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 40523,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40282,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t42702,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40520,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t42154,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40275,\n\t\t\t\"gems\": [\n\t\t\t\t42156\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40522,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t39999,\n\t\t\t\t42156\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40367,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40058\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40474\n\t\t},\n\t\t{\n\t\t\t\"id\": 40074\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 37390\n\t\t},\n\t\t{\n\t\t\t\"id\": 39763,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 39468,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 40322\n\t\t}\n\t]}`),\n};\n\nexport const P2_PRESET_FT = {\n\tname: 'P2 Preset FT',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n        {\n          \"id\": 45610,\n          \"enchant\": 3817,\n          \"gems\": [\n            41398,\n            42702\n          ]\n        },\n        {\n          \"id\": 45517,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 46203,\n          \"enchant\": 3808,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 45461,\n          \"enchant\": 3831,\n          \"gems\": [\n            40014\n          ]\n        },\n        {\n          \"id\": 46205,\n          \"enchant\": 3832,\n          \"gems\": [\n            40058,\n            40053\n          ]\n        },\n        {\n          \"id\": 45460,\n          \"enchant\": 3845,\n          \"gems\": [\n            39999,\n            0\n          ]\n        },\n        {\n          \"id\": 46200,\n          \"enchant\": 3604,\n          \"gems\": [\n            40014,\n            0\n          ]\n        },\n        {\n          \"id\": 45553,\n          \"gems\": [\n            36766,\n            36766,\n            36766\n          ]\n        },\n        {\n          \"id\": 46208,\n          \"enchant\": 3823,\n          \"gems\": [\n            39999,\n            39999\n          ]\n        },\n        {\n          \"id\": 45989,\n          \"enchant\": 3606,\n          \"gems\": [\n            40053,\n            39999\n          ]\n        },\n        {\n          \"id\": 45456,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 46046,\n          \"gems\": [\n            40053\n          ]\n        },\n        {\n          \"id\": 45609\n        },\n        {\n          \"id\": 46038\n        },\n        {\n          \"id\": 45612,\n          \"enchant\": 3789,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 46097,\n          \"enchant\": 3789,\n          \"gems\": [\n            40003\n          ]\n        },\n        {\n          \"id\": 40322\n        }\n      ]\n    }`),\n};\n\nexport const P2_PRESET_WF = {\n\tname: 'P2 Preset WF',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{  \"items\": [\n        {\n          \"id\": 45610,\n          \"enchant\": 3817,\n          \"gems\": [\n            41398,\n            42702\n          ]\n        },\n        {\n          \"id\": 45517,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 46203,\n          \"enchant\": 3808,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 45461,\n          \"enchant\": 3831,\n          \"gems\": [\n            40052\n          ]\n        },\n        {\n          \"id\": 46205,\n          \"enchant\": 3832,\n          \"gems\": [\n            40052,\n            40052\n          ]\n        },\n        {\n          \"id\": 45460,\n          \"enchant\": 3845,\n          \"gems\": [\n            39999,\n            0\n          ]\n        },\n        {\n          \"id\": 46200,\n          \"enchant\": 3604,\n          \"gems\": [\n            40053,\n            0\n          ]\n        },\n        {\n          \"id\": 45553,\n          \"gems\": [\n            36766,\n            36766,\n            36766\n          ]\n        },\n        {\n          \"id\": 46208,\n          \"enchant\": 3823,\n          \"gems\": [\n            39999,\n            39999\n          ]\n        },\n        {\n          \"id\": 45989,\n          \"enchant\": 3606,\n          \"gems\": [\n            40053,\n            39999\n          ]\n        },\n        {\n          \"id\": 45456,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 45608,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 45609\n        },\n        {\n          \"id\": 46038\n        },\n        {\n          \"id\": 45132,\n          \"enchant\": 3789,\n          \"gems\": [\n            40052\n          ]\n        },\n        {\n          \"id\": 46097,\n          \"enchant\": 3789,\n          \"gems\": [\n            39999\n          ]\n        },\n        {\n          \"id\": 40322\n        }\n      ]\n    }`),\n};\n\n","import { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat, PseudoStat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class EnhancementShamanSimUI extends IndividualSimUI<Spec.SpecEnhancementShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecEnhancementShaman>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'enhancement-shaman-sim-ui',\n\t\t\tcssScheme: 'shaman',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t\"Fire Elemental is in a alpha state\",\n\t\t\t\t\"Some things regarding weapon imbues need further testing and changes\",\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t],\n\t\t\tepPseudoStats: [\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatAttackPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 1.48,\n\t\t\t\t\t[Stat.StatAgility]: 1.59,\n\t\t\t\t\t[Stat.StatStrength]: 1.1,\n\t\t\t\t\t[Stat.StatSpellPower]: 1.13,\n\t\t\t\t\t[Stat.StatSpellHit]: 0, //default EP assumes cap\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.91,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.37,\n\t\t\t\t\t[Stat.StatAttackPower]: 1.0,\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.38,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.81,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.61, //haste is complicated\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.48,\n\t\t\t\t\t[Stat.StatExpertise]: 0, //default EP assumes cap\n\t\t\t\t}, {\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 5.21,\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.21,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tjudgementsOfTheWise: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tShamanInputs.ShamanShieldInput,\n\t\t\t\tShamanInputs.Bloodlust,\n\t\t\t\tShamanInputs.ShamanImbueMH,\n\t\t\t\tShamanInputs.ShamanImbueOH,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: ShamanInputs.EnhancementShamanRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.ReplenishmentBuff,\n\t\t\t\tIconInputs.MP5Buff,\n\t\t\t\tIconInputs.SpellHasteBuff,\n\t\t\t\tIconInputs.SpiritBuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.BleedDebuff,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tShamanInputs.SyncTypeInput,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tcustomSections: [\n\t\t\t\tTotemsSection\n\t\t\t],\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PreRaid_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t\tPresets.P2_PRESET_FT,\n\t\t\t\t\tPresets.P2_PRESET_WF,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["Bloodlust","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","ShamanShield","NoShield","tooltip","actionId","WaterShield","LightningShield","ShamanImbueMH","ShamanImbue","NoImbue","WindfuryWeapon","FlametongueWeapon","text","FlametongueWeaponDownrank","FrostbrandWeapon","ShamanImbueOH","SyncTypeInput","InputHelpers.makeSpecOptionsEnumInput","label","labelTooltip","name","ShamanSyncType","NoSync","SyncMainhandOffhandSwings","DelayOffhandSwings","EnhancmentItemSwapInputs","InputHelpers.MakeItemSwapInput","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","showWhen","player","getRotation","totems","useFireElemental","enableItemSwap","EnhancementShamanRotationConfig","inputs","InputHelpers.makeRotationBooleanInput","InputHelpers.makeRotationEnumInput","RotationType","Priority","Custom","InputHelpers.makeCustomRotationInput","numColumns","CustomRotationSpell","LightningBolt","LightningBoltWeave","LightningBoltDelayedWeave","StormstrikeDebuffMissing","Stormstrike","FlameShock","EarthShock","MagmaTotem","FireNova","LavaLash","LavaBurst","FrostShock","rotationType","PrimaryShock","None","Earth","Frost","InputHelpers.makeRotationNumberInput","enableWhen","weaveFlameShock","customRotation","spells","find","customSpell","spell","getTalents","maelstromWeapon","lightningboltWeave","shamanisticRage","StandardTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","ShamanMajorGlyph","GlyphOfStormstrike","major2","GlyphOfFlametongueWeapon","major3","GlyphOfFeralSpirit","DefaultRotation","EnhancementShamanRotation","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WindfuryTotem","fire","FireTotem","water","WaterTotem","ManaSpringTotem","maelstromweaponMinStack","autoWeaveDelay","delayGcdWeave","lavaburstWeave","firenovaManaThreshold","shamanisticRageManaThreshold","primaryShock","CustomRotation","CustomSpell","DefaultOptions","EnhancementShamanOptions","shield","bloodlust","imbueMh","imbueOh","syncType","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfEndlessRage","food","Food","FoodFishFeast","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","arcaneBrilliance","leaderOfThePack","totemOfWrath","wrathOfAirTotem","moonkinAura","sanctifiedRetribution","divineSpirit","battleShout","DefaultDebuffs","Debuffs","bloodFrenzy","sunderArmor","curseOfWeakness","TristateEffectRegular","curseOfElements","faerieFire","judgementOfWisdom","misery","shadowMastery","PreRaid_PRESET","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET_FT","P2_PRESET_WF","EnhancementShamanSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","StatSpellPower","StatSpellCrit","StatSpellHit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","judgementsOfTheWise","debuffs","Presets.DefaultDebuffs","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.Bloodlust","ShamanInputs.ShamanImbueMH","ShamanInputs.ShamanImbueOH","rotationInputs","ShamanInputs.EnhancementShamanRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MP5Buff","IconInputs.SpellHasteBuff","IconInputs.SpiritBuff","excludeBuffDebuffInputs","IconInputs.BleedDebuff","otherInputs","ShamanInputs.SyncTypeInput","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","Presets.PreRaid_PRESET","Presets.P2_PRESET_FT","Presets.P2_PRESET_WF"],"mappings":"ihBA+Ba,MAAAA,EAAYC,EAAyE,CACjGC,UAAW,YACXC,GAAIC,EAASC,YAAY,QAEbC,EAAoBC,EAAoF,CACpHL,UAAW,SACXM,OAAQ,CACP,CAAEC,MAAOC,EAAaC,SAAUC,QAAS,aACzC,CAAEC,SAAUT,EAASC,YAAY,OAAQI,MAAOC,EAAaI,aAC7D,CAAED,SAAUT,EAASC,YAAY,OAAQI,MAAOC,EAAaK,oBAIlDC,EAAgBT,EAAmF,CAC/GL,UAAW,UACXM,OAAQ,CACP,CAAEC,MAAOQ,EAAYC,QAASN,QAAS,wBACvC,CAAEC,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYE,gBAC5D,CAAEN,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYG,kBAAmBC,KAAM,OACrF,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYK,0BAA2BD,KAAM,MAC7F,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYM,qBAIjDC,GAAgBjB,EAAmF,CAC/GL,UAAW,UACXM,OAAQ,CACP,CAAEC,MAAOQ,EAAYC,QAASN,QAAS,uBACvC,CAAEC,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYE,gBAC5D,CAAEN,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYG,kBAAmBC,KAAM,OACrF,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYK,0BAA2BD,KAAM,MAC7F,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAOQ,EAAYM,qBAIjDE,GAAgBC,EAAkF,CAC9GxB,UAAW,WACXyB,MAAO,uBACPC,aAAc,ySACdpB,OAAQ,CACP,CAAEqB,KAAM,OAAQpB,MAAOqB,EAAeC,QACtC,CAAEF,KAAM,eAAgBpB,MAAOqB,EAAeE,2BAC9C,CAAEH,KAAM,kBAAmBpB,MAAOqB,EAAeG,uBAItCC,GAA2BC,EAA2D,CAClGjC,UAAW,WACXM,OAAQ,CACP4B,EAASC,iBACTD,EAASE,iBAGVV,aAAc,qMACdW,SAAWC,GAAgDA,EAAOC,cAAcC,QAAQC,kBAAoBH,EAAOC,cAAcG,iBAAmB,IAGxIC,GAAkC,CAC9CC,OACC,CACCC,EAAkE,CACjE7C,UAAW,iBACXyB,MAAO,uBACPC,aAAc,8BACdW,SAAWC,GAAgDA,EAAOC,cAAcC,QAAQC,mBAAoB,IAE7GT,GACAc,EAA6E,CAC5E9C,UAAW,eACXyB,MAAO,OACPC,aACC,sNAQDpB,OAAQ,CACP,CAAEqB,KAAM,WAAYpB,MAAOwC,EAAaC,UACxC,CAAErB,KAAM,SAAUpB,MAAOwC,EAAaE,WAGxCC,EAAsF,CACrFlD,UAAW,iBACXmD,WAAY,EACZ7C,OAAQ,CACP,CAAEK,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBC,eACpE,CAAE1C,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBE,mBAAoBnC,KAAM,SAC9F,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBG,0BAA2BpC,KAAM,SACrG,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBI,yBAA0BrC,KAAM,UACpG,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBK,aACpE,CAAE9C,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBM,YACpE,CAAE/C,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBO,YACpE,CAAEhD,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBQ,YACpE,CAAEjD,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBS,UACpE,CAAElD,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBU,UACpE,CAAEnD,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBvC,iBACpE,CAAEF,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBW,UAAW5C,KAAM,SACrF,CAAER,SAAUT,EAASC,YAAY,OAAQI,MAAO6C,EAAoBY,aAErE3B,SAAWC,GAA+CA,EAAOC,cAAc0B,cAAgBlB,EAAaE,SAE7GH,EAA6E,CAC5E9C,UAAW,eACXyB,MAAO,gBACPnB,OAAQ,CACP,CAAEqB,KAAM,OAAQpB,MAAO2D,EAAaC,MACpC,CAAExC,KAAM,cAAepB,MAAO2D,EAAaE,OAC3C,CAAEzC,KAAM,cAAepB,MAAO2D,EAAaG,QAE5ChC,SAAWC,GAA+CA,EAAOC,cAAc0B,cAAgBlB,EAAaE,SAE7GJ,EAAkE,CACjE7C,UAAW,kBACXyB,MAAO,oBACPC,aAAc,qEACdW,SAAWC,GAA+CA,EAAOC,cAAc0B,cAAgBlB,EAAaE,SAEpGqB,EAAiE,CAC7DtE,UAAY,sBACZyB,MAAQ,yCACRC,aAAc,mFACd6C,WAAajC,GAA+CA,EAAOC,cAAciC,gBACjFnC,SAAWC,GAClBA,EAAOC,cAAc0B,cAAgBlB,EAAaE,OAC0E,MAAxHX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBM,aAG1GpB,EAAOC,cAAciC,kBAG9B3B,EAAkE,CACjE7C,UAAW,qBACXyB,MAAO,gCACPC,aAAc,wDACd6C,WAAajC,GAA+CA,EAAOwC,aAAaC,gBAAkB,EAClG1C,SAAWC,GAA+CA,EAAOC,cAAc0B,cAAgBlB,EAAaE,SAE7GH,EAAuE,CACtE9C,UAAW,0BACXyB,MAAO,oCACPC,aAAc,4HACdpB,OAAQ,CACP,CAAEqB,KAAM,IAAKpB,MAAO,GACpB,CAAEoB,KAAM,IAAKpB,MAAO,GACpB,CAAEoB,KAAM,IAAKpB,MAAO,GACpB,CAAEoB,KAAM,IAAKpB,MAAO,IAErBgE,WAAajC,GACRA,EAAOC,cAAc0B,cAAgBlB,EAAaE,OACkF,MAAhIX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBE,qBAG1GhB,EAAOC,cAAcyC,mBAE7B3C,SAAWC,GACNA,EAAOC,cAAc0B,cAAgBlB,EAAaE,QACkF,MAAhIX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBE,uBAMnHgB,EAAiE,CAChEtE,UAAW,iBACXyB,MAAO,kCACPC,aAAc,mFACd6C,WAAajC,GACRA,EAAOC,cAAc0B,cAAgBlB,EAAaE,OACkF,MAAhIX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBE,qBAG1GhB,EAAOC,cAAcyC,mBAE7B3C,SAAYC,GACPA,EAAOC,cAAc0B,cAAgBlB,EAAaE,QACkF,MAAhIX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBE,uBAKhHgB,EAAiE,CACnEtE,UAAW,gBACXyB,MAAO,oBACPC,aAAc,oGACd6C,WAAajC,GACRA,EAAOC,cAAc0B,cAAgBlB,EAAaE,QAI/CX,EAAOC,cAAcyC,mBAE7B3C,SAAYC,GACPA,EAAOC,cAAc0B,cAAgBlB,EAAaE,SAOxDqB,EAAiE,CAChEtE,UAAW,gBACXyB,MAAO,mBACPC,aAAc,gGACd6C,WAAajC,GACRA,EAAOC,cAAc0B,cAAgBlB,EAAaE,QACyF,MAAvIX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBG,4BAKlHlB,SAAYC,GACPA,EAAOC,cAAc0B,cAAgBlB,EAAaE,QACyF,MAAvIX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBG,8BAMnHV,EAAkE,CACjE7C,UAAW,iBACXyB,MAAO,4BACPC,aAAc,8DACd6C,WAAajC,GAA+CA,EAAOC,cAAcyC,mBACjF3C,SAAWC,GAA+CA,EAAOC,cAAc0B,cAAgBlB,EAAaE,SAE7GqB,EAAiE,CAChEtE,UAAW,wBACXyB,MAAO,iCACPC,aAAc,mHACdW,SAAYC,GACPA,EAAOC,cAAc0B,cAAgBlB,EAAaE,QACwE,MAAtHX,EAAOC,cAAckC,gBAAgBC,OAAOC,MAAKC,GAAeA,EAAYC,OAASzB,EAAoBS,aAMnHS,EAAiE,CAChEtE,UAAW,+BACXyB,MAAO,iCACP8C,WAAajC,GAA+CA,EAAOwC,aAAaG,oBC1OvEC,GAAkB,CAC9BvD,KAAM,WACNwD,KAAMC,EAAaC,OAAO,CACzBC,cAAe,0CACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAiBC,mBACzBC,OAAQF,EAAiBG,yBACzBC,OAAQJ,EAAiBK,wBAMfC,GAAkBC,EAA0BZ,OAAO,CAC/D7C,OAAQ0D,EAAab,OAAO,CAC3Bc,MAAOC,EAAWC,qBAClBC,IAAKC,EAASC,cACdC,KAAMC,EAAU9C,WAChB+C,MAAOC,EAAWC,gBAClBpE,kBAAkB,IAEnBqE,wBAAyB,EACzB9B,oBAAoB,EACpB+B,eAAgB,IAChBC,cAAe,IACfC,gBAAgB,EAChBC,sBAAuB,IACvBC,6BAA8B,GAC9BC,aAAclD,EAAaE,MAC3BI,iBAAiB,EACfP,aAAclB,EAAaC,SAC3ByB,eAAgB4C,EAAehC,OAAO,CACtCX,OAAQ,CACR4C,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBC,gBAChDiE,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBI,2BAChD8D,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBE,qBAChDgE,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBK,cAChD6D,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBM,aAChD4D,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBO,aAChD2D,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBQ,aAChD0D,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBvC,kBAChDyG,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBS,WAChDyD,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBG,4BAChD+D,EAAYjC,OAAO,CAAER,MAAOzB,EAAoBU,gBAKtCyD,GAAiBC,EAAyBnC,OAAO,CAC7DoC,OAAQjH,EAAaK,gBACrB6G,WAAW,EACXC,QAAS5G,EAAYE,eACrB2G,QAAS7G,EAAYG,kBACrB2G,SAAUjG,EAAeE,4BAGbgG,GAAkBC,EAAS1C,OAAO,CAC9C2C,cAAeC,EAAQC,cACvBC,MAAOC,EAAMC,mBACbC,KAAMC,EAAKC,gBAGCC,GAAmBC,EAAUrD,OAAO,CAChDsD,cAAeC,EAAeC,uBAC9BC,kBAAkB,EAClBC,gBAAiBH,EAAeC,uBAChCG,cAAc,EACdC,iBAAiB,EACjBC,YAAaN,EAAeC,uBAC5BM,uBAAuB,EACvBC,cAAc,EACdC,YAAaT,EAAeC,yBAGhBS,GAAiBC,EAAQlE,OAAO,CAC5CmE,aAAa,EACbC,aAAa,EACbC,gBAAiBd,EAAee,sBAChCC,iBAAiB,EACjBC,WAAYjB,EAAeC,uBAC3BiB,mBAAmB,EACnBC,QAAQ,EACRf,cAAc,EACdgB,eAAe,IAIHC,GAAiB,CAC7BtI,KAAM,iBACNjB,QAASwJ,EACTC,KAAMC,EAAcC,eAAe,2nCAuFvBC,GAAY,CACxB3I,KAAM,YACNjB,QAASwJ,EACTC,KAAMC,EAAcC,eAAe,ywCAiGvBE,GAAe,CAC3B5I,KAAM,eACNjB,QAASwJ,EACTC,KAAMC,EAAcC,eAAe,k9DAoHvBG,GAAe,CAC3B7I,KAAM,eACNjB,QAASwJ,EACTC,KAAMC,EAAcC,eAAe,m9DCxa7B,MAAMI,WAA+BC,EAC3CC,YAAYC,EAAyBtI,GACpCuI,MAAMD,EAAYtI,EAAQ,CACzBwI,SAAU,4BACVC,UAAW,SAEXC,YAAa,CACZ,qCACA,wEAIDC,QAAS,CACRC,EAAKC,cACLD,EAAKE,YACLF,EAAKG,aACLH,EAAKI,gBACLJ,EAAKK,aACLL,EAAKM,cACLN,EAAKO,eACLP,EAAKQ,qBACLR,EAAKS,cACLT,EAAKU,eACLV,EAAKW,cACLX,EAAKY,aACLZ,EAAKa,gBAENC,cAAe,CACdC,EAAWC,sBACXD,EAAWE,sBAGZC,gBAAiBlB,EAAKI,gBAEtBe,aAAc,CACbnB,EAAKoB,WACLpB,EAAKqB,YACLrB,EAAKG,aACLH,EAAKE,YACLF,EAAKC,cACLD,EAAKI,gBACLJ,EAAKK,aACLL,EAAKM,cACLN,EAAKO,eACLP,EAAKS,cACLT,EAAKQ,qBACLR,EAAKU,eACLV,EAAKY,aACLZ,EAAKW,cACLX,EAAKa,gBAGNS,SAAU,CAETrC,KAAMsC,GAAkBtC,KAExBuC,UAAWC,EAAMC,QAAQ,CACxB,CAAC1B,EAAKC,eAAgB,KACtB,CAACD,EAAKE,aAAc,KACpB,CAACF,EAAKG,cAAe,IACrB,CAACH,EAAKU,gBAAiB,KACvB,CAACV,EAAKY,cAAe,EACrB,CAACZ,EAAKW,eAAgB,IACtB,CAACX,EAAKa,gBAAiB,IACvB,CAACb,EAAKI,iBAAkB,EACxB,CAACJ,EAAKK,cAAe,KACrB,CAACL,EAAKM,eAAgB,IACtB,CAACN,EAAKO,gBAAiB,KACvB,CAACP,EAAKQ,sBAAuB,IAC7B,CAACR,EAAKS,eAAgB,GACpB,CACF,CAACM,EAAWC,uBAAwB,KACpC,CAACD,EAAWE,sBAAuB,OAGpCU,SAAUC,GAEVC,SAAUC,GAEVC,QAASC,GAAwB/H,KAEjCgI,YAAaC,GAEbC,UAAWC,GACXC,WAAYC,EAAWnI,OAAO,IAE9BoI,gBAAiBC,EAAgBrI,OAAO,CACvCsI,iBAAiB,EACjBC,iBAAkBhF,EAAeC,uBACjCgF,gBAAiBjF,EAAeC,uBAChCiF,qBAAqB,IAEtBC,QAASC,IAIVC,iBAAkB,CACjBC,EACAC,EACAC,EACAC,IAGDC,eAAgBC,GAEhBC,wBAAyB,CACxBC,EACAC,EACAC,EACAC,GAEDC,wBAAyB,CACxBC,GAGDC,YAAa,CACZnM,OAAQ,CACPoM,GACAC,EACAC,IAGFC,eAAgB,CACfC,GAEDC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERtC,QAAS,CACRC,IAGD/C,KAAM,CACLqF,GACA/C,GACAgD,GACAC,MAIJ"}