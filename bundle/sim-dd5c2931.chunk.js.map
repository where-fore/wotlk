{"version":3,"file":"sim-dd5c2931.chunk.js","sources":["../../../ui/protection_paladin/inputs.ts","../../../ui/protection_paladin/presets.ts","../../../ui/protection_paladin/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { Player } from '../core/player.js';\nimport { EventID } from '../core/typed_event.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport {\n\tPaladinAura as PaladinAura,\n\tPaladinSeal,\n\tPaladinJudgement as PaladinJudgement,\n\tProtectionPaladin_Rotation_SpellOption as SpellOption,\n\tProtectionPaladin_Rotation as ProtectionPaladinRotation,\n\tProtectionPaladin_Options as ProtectionPaladinOptions,\n} from '../core/proto/paladin.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\nexport const ProtectionPaladinRotationPriorityConfig = InputHelpers.makeCustomRotationInput<Spec.SpecProtectionPaladin, SpellOption>({\n\tfieldName: 'customRotation',\n\tnumColumns: 2,\n\tvalues: [\n\t\t{ actionId: ActionId.fromSpellId(53408), value: SpellOption.JudgementOfWisdom },\n\t\t{ actionId: ActionId.fromSpellId(48806), value: SpellOption.HammerOfWrath },\n\t\t{ actionId: ActionId.fromSpellId(48819), value: SpellOption.Consecration },\n\t\t{ actionId: ActionId.fromSpellId(48817), value: SpellOption.HolyWrath },\n\t\t{ actionId: ActionId.fromSpellId(48801), value: SpellOption.Exorcism },\n\t\t{ actionId: ActionId.fromSpellId(61411), value: SpellOption.ShieldOfRighteousness },\n\t\t{ actionId: ActionId.fromSpellId(48827), value: SpellOption.AvengersShield },\n\t\t{ actionId: ActionId.fromSpellId(53595), value: SpellOption.HammerOfTheRighteous },\n\t\t{ actionId: ActionId.fromSpellId(48952), value: SpellOption.HolyShield },\n\t],\n});\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\nexport const ProtectionPaladinRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecProtectionPaladin>({\n\t\t\tfieldName: 'hammerFirst',\n\t\t\tlabel: 'Open with HotR',\n\t\t\tlabelTooltip: 'Open with Hammer of the Righteous instead of Shield of Righteousness in the standard rotation. Recommended for AoE.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecProtectionPaladin>({\n\t\t\tfieldName: 'squeezeHolyWrath',\n\t\t\tlabel: 'Squeeze Holy Wrath',\n\t\t\tlabelTooltip: 'Squeeze a Holy Wrath cast during sufficiently hasted GCDs (Bloodlust) in the standard rotation.',\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecProtectionPaladin>({\n\t\t\tfieldName: 'waitSlack',\n\t\t\tlabel: 'Max Wait Time (ms)',\n\t\t\tlabelTooltip: 'Maximum time in milliseconds to prioritize waiting for next Hammer/Shield to maintain 969. Affects standard and custom priority.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecProtectionPaladin>({\n\t\t\tfieldName: 'useCustomPrio',\n\t\t\tlabel: 'Use custom priority',\n\t\t\tlabelTooltip: 'Deviates from the standard 96969 rotation, using the priority configured below. Will still attempt to keep a filler GCD between Hammer and Shield.',\n\t\t}),\n\t\tProtectionPaladinRotationPriorityConfig\n\t],\n}\n\nexport const AuraSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecProtectionPaladin, PaladinAura>({\n\tfieldName: 'aura',\n\tlabel: 'Aura',\n\tvalues: [\n\t\t{ name: 'None', value: PaladinAura.NoPaladinAura },\n\t\t{ name: 'Devotion Aura', value: PaladinAura.DevotionAura },\n\t\t{ name: 'Retribution Aura', value: PaladinAura.RetributionAura },\n\t],\n});\n\nexport const StartingSealSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecProtectionPaladin, PaladinSeal>({\n\tfieldName: 'seal',\n\tlabel: 'Seal',\n\tlabelTooltip: 'The seal active before encounter',\n\tvalues: [\n\t\t{ name: 'Vengeance', value: PaladinSeal.Vengeance },\n\t\t{ name: 'Command', value: PaladinSeal.Command },\n\t],\n});\n\nexport const JudgementSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecProtectionPaladin, PaladinJudgement>({\n\tfieldName: 'judgement',\n\tlabel: 'Judgement',\n\tlabelTooltip: 'Judgement debuff you will use on the target during the encounter.',\n\tvalues: [\n\t\t{ name: 'Wisdom', value: PaladinJudgement.JudgementOfWisdom },\n\t\t{ name: 'Light', value: PaladinJudgement.JudgementOfLight },\n\t],\n});\n\nexport const UseAvengingWrath = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecProtectionPaladin>({\n\tfieldName: 'useAvengingWrath',\n\tlabel: 'Use Avenging Wrath',\n});\n","import { Conjured, Consumes } from '../core/proto/common.js';\nimport { CustomRotation, CustomSpell } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { ItemSpec } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Faction } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport { Player } from '../core/player.js';\n\nimport {\n\tPaladinAura as PaladinAura,\n\tPaladinMajorGlyph,\n\tPaladinMinorGlyph,\n\tPaladinJudgement as PaladinJudgement,\n\tProtectionPaladin_Rotation_SpellOption as SpellOption,\n\tProtectionPaladin_Rotation as ProtectionPaladinRotation,\n\tProtectionPaladin_Options as ProtectionPaladinOptions,\n} from '../core/proto/paladin.js';\n\nimport * as Gems from '../core/proto_utils/gems.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const GenericAoeTalents = {\n\tname: 'Baseline Example',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-05005135200132311333312321-511302012003',\n\t\tglyphs: {\n\t\t\tmajor1: PaladinMajorGlyph.GlyphOfSealOfVengeance,\n\t\t\tmajor2: PaladinMajorGlyph.GlyphOfRighteousDefense,\n\t\t\tmajor3: PaladinMajorGlyph.GlyphOfDivinePlea,\n\t\t\tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\n\t\t\tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\n\t\t\tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings\n\t\t}\n\t}),\n};\n\nexport const DefaultRotation = ProtectionPaladinRotation.create({\n\thammerFirst: false,\n\tsqueezeHolyWrath: true,\n\twaitSlack: 300,\n\tuseCustomPrio: false,\n\tcustomRotation: CustomRotation.create({\n\t\tspells: [\n\t\t\tCustomSpell.create({ spell: SpellOption.ShieldOfRighteousness }),\n\t\t\tCustomSpell.create({ spell: SpellOption.HammerOfTheRighteous }),\n\t\t\tCustomSpell.create({ spell: SpellOption.HolyShield }),\n\t\t\tCustomSpell.create({ spell: SpellOption.HammerOfWrath }),\n\t\t\tCustomSpell.create({ spell: SpellOption.Consecration }),\n\t\t\tCustomSpell.create({ spell: SpellOption.AvengersShield }),\n\t\t\tCustomSpell.create({ spell: SpellOption.JudgementOfWisdom }),\n\t\t\tCustomSpell.create({ spell: SpellOption.Exorcism })\n\t\t],\n\t}),\n});\n\nexport const DefaultOptions = ProtectionPaladinOptions.create({\n\taura: PaladinAura.RetributionAura,\n\tjudgement: PaladinJudgement.JudgementOfWisdom,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfStoneblood,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.IndestructiblePotion,\n\tprepopPotion:  Potions.IndestructiblePotion,\n});\n\nexport const PRERAID_PRESET = {\n\tname: 'Preraid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecProtectionPaladin>) => true,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42549,\n\t\t\t\"enchant\": 3818,\n\t\t\t\"gems\": [\n\t\t\t\t41396,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40679\n\t\t},\n\t\t{\n\t\t\t\"id\": 37635,\n\t\t\t\"enchant\": 3852,\n\t\t\t\"gems\": [\n\t\t\t\t40015\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44188,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 39638,\n\t\t\t\"enchant\": 1953,\n\t\t\t\"gems\": [\n\t\t\t\t36767,\n\t\t\t\t40089\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37682,\n\t\t\t\"enchant\": 3850,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39639,\n\t\t\t\"enchant\": 3860,\n\t\t\t\"gems\": [\n\t\t\t\t36767,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37379,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t40022,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37292,\n\t\t\t\"enchant\": 3822,\n\t\t\t\"gems\": [\n\t\t\t\t40089\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44243,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 37186\n\t\t},\n\t\t{\n\t\t\t\"id\": 37257\n\t\t},\n\t\t{\n\t\t\t\"id\": 44063,\n\t\t\t\"gems\": [\n\t\t\t\t36767,\n\t\t\t\t40015\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37220\n\t\t},\n\t\t{\n\t\t\t\"id\": 37179,\n\t\t\t\"enchant\": 2673\n\t\t},\n\t\t{\n\t\t\t\"id\": 43085,\n\t\t\t\"enchant\": 3849\n\t\t},\n\t\t{\n\t\t\t\"id\": 40707\n\t\t}\n\t]}`),\n};\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecProtectionPaladin>) => true,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40581,\n\t\t\t\"enchant\": 3818,\n\t\t\t\"gems\": [\n\t\t\t\t41380,\n\t\t\t\t36767\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40387\n\t\t},\n\t\t{\n\t\t\t\"id\": 40584,\n\t\t\t\"enchant\": 3852,\n\t\t\t\"gems\": [\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40410,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 40579,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t36767,\n\t\t\t\t40022\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39764,\n\t\t\t\"enchant\": 3850,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40580,\n\t\t\t\"enchant\": 3860,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39759,\n\t\t\t\"enchant\": 3601,\n\t\t\t\"gems\": [\n\t\t\t\t40008,\n\t\t\t\t40008\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40589,\n\t\t\t\"enchant\": 3822\n\t\t},\n\t\t{\n\t\t\t\"id\": 39717,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40089\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40718\n\t\t},\n\t\t{\n\t\t\t\"id\": 40107\n\t\t},\n\t\t{\n\t\t\t\"id\": 44063,\n\t\t\t\"gems\": [\n\t\t\t\t36767,\n\t\t\t\t40089\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37220\n\t\t},\n\t\t{\n\t\t\t\"id\": 40345,\n\t\t\t\"enchant\": 3788\n\t\t},\n\t\t{\n\t\t\t\"id\": 40400,\n\t\t\t\"enchant\": 3849\n\t\t},\n\t\t{\n\t\t\t\"id\": 40707\n\t\t}\n\t]}`),\n};\n\nexport const P2_PRESET = {\n\tname: 'P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<Spec.SpecProtectionPaladin>) => true,\n\tgear: EquipmentSpec.fromJsonString(`{\n      \"items\": [\n        {\n          \"id\": 46175,\n          \"enchant\": 3818,\n          \"gems\": [\n            41380,\n            40088\n          ]\n        },\n        {\n          \"id\": 45485,\n          \"gems\": [\n            40088\n          ]\n        },\n        {\n          \"id\": 46177,\n          \"enchant\": 3852,\n          \"gems\": [\n            40034\n          ]\n        },\n        {\n          \"id\": 45496,\n          \"enchant\": 3605,\n          \"gems\": [\n            40034\n          ]\n        },\n        {\n          \"id\": 46039,\n          \"enchant\": 3832,\n          \"gems\": [\n            36767,\n            36767\n          ]\n        },\n        {\n          \"id\": 45111,\n          \"enchant\": 3850,\n          \"gems\": [\n            0\n          ]\n        },\n        {\n          \"id\": 45487,\n          \"enchant\": 3860,\n          \"gems\": [\n            40008,\n            40008,\n            0\n          ]\n        },\n        {\n          \"id\": 45825,\n          \"enchant\": 3601,\n          \"gems\": [\n            40008\n          ]\n        },\n        {\n          \"id\": 45594,\n          \"enchant\": 3822,\n          \"gems\": [\n            40034,\n            45880,\n            40088\n          ]\n        },\n        {\n          \"id\": 45988,\n          \"enchant\": 3606,\n          \"gems\": [\n            40008,\n            40008\n          ]\n        },\n        {\n          \"id\": 45471,\n          \"gems\": [\n            40088\n          ]\n        },\n        {\n          \"id\": 45326\n        },\n        {\n          \"id\": 45158\n        },\n        {\n          \"id\": 46021\n        },\n        {\n          \"id\": 45947,\n          \"enchant\": 3788,\n          \"gems\": [\n            40088\n          ]\n        },\n        {\n          \"id\": 45587,\n          \"enchant\": 3849,\n          \"gems\": [\n            36767\n          ]\n        },\n        {\n          \"id\": 45145\n        }\n      ]\n    }`),\n};\n\n\n\t\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat, PseudoStat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n\nimport { PaladinMajorGlyph, PaladinSeal } from '../core/proto/paladin.js';\n\nimport * as ProtectionPaladinInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class ProtectionPaladinSimUI extends IndividualSimUI<Spec.SpecProtectionPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionPaladin>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'protection-paladin-sim-ui',\n\t\t\tcssScheme: 'paladin',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatArmor,\n\t\t\t\tStat.StatDefense,\n\t\t\t\tStat.StatBlock,\n\t\t\t\tStat.StatBlockValue,\n\t\t\t\tStat.StatDodge,\n\t\t\t\tStat.StatParry,\n\t\t\t\tStat.StatResilience,\n\t\t\t],\n\t\t\tepPseudoStats: [\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatArmor,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatDefense,\n\t\t\t\tStat.StatBlock,\n\t\t\t\tStat.StatBlockValue,\n\t\t\t\tStat.StatDodge,\n\t\t\t\tStat.StatParry,\n\t\t\t\tStat.StatResilience,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecProtectionPaladin>) => {\n\t\t\t\tlet stats = new Stats();\n\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tif (player.getMajorGlyphs().includes(PaladinMajorGlyph.GlyphOfSealOfVengeance) && (player.getSpecOptions().seal == PaladinSeal.Vengeance)) {\n\t\t\t\t\t\tstats = stats.addStat(Stat.StatExpertise, 10 * Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P2_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatArmor]: 0.07,\n\t\t\t\t\t[Stat.StatStamina]: 1.14,\n\t\t\t\t\t[Stat.StatStrength]: 1.00,\n\t\t\t\t\t[Stat.StatAgility]: 0.62,\n\t\t\t\t\t[Stat.StatAttackPower]: 0.26,\n\t\t\t\t\t[Stat.StatExpertise]: 0.69,\n\t\t\t\t\t[Stat.StatMeleeHit]: 0.79,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.30,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 0.17,\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.04,\n\t\t\t\t\t[Stat.StatSpellPower]: 0.13,\n\t\t\t\t\t[Stat.StatBlock]: 0.52,\n\t\t\t\t\t[Stat.StatBlockValue]: 0.28,\n\t\t\t\t\t[Stat.StatDodge]: 0.46,\n\t\t\t\t\t[Stat.StatParry]: 0.61,\n\t\t\t\t\t[Stat.StatDefense]: 0.54,\n\t\t\t\t}, {\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.33,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.GenericAoeTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t\tunleashedRage: true,\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\t\t\ticyTalons: true,\n\t\t\t\t\ttotemOfWrath: true,\n\t\t\t\t\tdemonicPact: 500,\n\t\t\t\t\tswiftRetribution: true,\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tshadowProtection: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfSanctuary: true,\n\t\t\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tjudgementOfLight: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tebonPlaguebringer: true,\n\t\t\t\t\ttotemOfWrath: true,\n\t\t\t\t\tshadowMastery: true,\n\t\t\t\t\tbloodFrenzy: true,\n\t\t\t\t\tmangle: true,\n\t\t\t\t\texposeArmor: true,\n\t\t\t\t\tsunderArmor: true,\n\t\t\t\t\tvindication: true,\n\t\t\t\t\tthunderClap: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tinsectSwarm: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: ProtectionPaladinInputs.ProtectionPaladinRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\t\tIconInputs.HealthBuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.IncomingHps,\n\t\t\t\t\tOtherInputs.HealingCadence,\n\t\t\t\t\tOtherInputs.BurstWindow,\n\t\t\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\t\t\tOtherInputs.InspirationUptime,\n\t\t\t\t\tProtectionPaladinInputs.AuraSelection,\n\t\t\t\t\tProtectionPaladinInputs.UseAvengingWrath,\n\t\t\t\t\tProtectionPaladinInputs.JudgementSelection,\n\t\t\t\t\tProtectionPaladinInputs.StartingSealSelection,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.GenericAoeTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRERAID_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t\tPresets.P2_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["ProtectionPaladinRotationPriorityConfig","InputHelpers.makeCustomRotationInput","fieldName","numColumns","values","actionId","ActionId","fromSpellId","value","SpellOption","JudgementOfWisdom","HammerOfWrath","Consecration","HolyWrath","Exorcism","ShieldOfRighteousness","AvengersShield","HammerOfTheRighteous","HolyShield","ProtectionPaladinRotationConfig","inputs","InputHelpers.makeRotationBooleanInput","label","labelTooltip","InputHelpers.makeRotationNumberInput","AuraSelection","InputHelpers.makeSpecOptionsEnumInput","name","PaladinAura","NoPaladinAura","DevotionAura","RetributionAura","StartingSealSelection","PaladinSeal","Vengeance","Command","JudgementSelection","PaladinJudgement","JudgementOfLight","UseAvengingWrath","InputHelpers.makeSpecOptionsBooleanInput","GenericAoeTalents","data","SavedTalents","create","talentsString","glyphs","major1","PaladinMajorGlyph","GlyphOfSealOfVengeance","major2","GlyphOfRighteousDefense","major3","GlyphOfDivinePlea","minor1","PaladinMinorGlyph","GlyphOfSenseUndead","minor2","GlyphOfLayOnHands","minor3","GlyphOfBlessingOfKings","DefaultRotation","ProtectionPaladinRotation","hammerFirst","squeezeHolyWrath","waitSlack","useCustomPrio","customRotation","CustomRotation","spells","CustomSpell","spell","DefaultOptions","ProtectionPaladinOptions","aura","judgement","DefaultConsumes","Consumes","flask","Flask","FlaskOfStoneblood","food","Food","FoodDragonfinFilet","defaultPotion","Potions","IndestructiblePotion","prepopPotion","PRERAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","player","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET","ProtectionPaladinSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatMeleeHit","StatSpellHit","StatMeleeCrit","StatExpertise","StatMeleeHaste","StatArmorPenetration","StatSpellPower","StatArmor","StatDefense","StatBlock","StatBlockValue","StatDodge","StatParry","StatResilience","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","modifyDisplayStats","stats","Stats","TypedEvent","freezeAllAndDo","getMajorGlyphs","includes","getSpecOptions","seal","addStat","Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","talents","defaults","Presets.P2_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.GenericAoeTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","unleashedRage","leaderOfThePack","TristateEffectRegular","icyTalons","totemOfWrath","demonicPact","swiftRetribution","moonkinAura","sanctifiedRetribution","manaSpringTotem","bloodlust","thorns","devotionAura","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfSanctuary","blessingOfWisdom","blessingOfMight","debuffs","Debuffs","judgementOfWisdom","judgementOfLight","misery","faerieFire","ebonPlaguebringer","shadowMastery","bloodFrenzy","mangle","exposeArmor","sunderArmor","vindication","thunderClap","insectSwarm","playerIconInputs","rotationInputs","ProtectionPaladinInputs.ProtectionPaladinRotationConfig","includeBuffDebuffInputs","IconInputs.HealthBuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","ProtectionPaladinInputs.AuraSelection","ProtectionPaladinInputs.UseAvengingWrath","ProtectionPaladinInputs.JudgementSelection","ProtectionPaladinInputs.StartingSealSelection","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.PRERAID_PRESET","Presets.P1_PRESET"],"mappings":"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"}