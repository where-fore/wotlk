{"version":3,"file":"totem_inputs-73dd2b0d.chunk.js","sources":["../../../ui/core/components/totem_inputs.ts"],"sourcesContent":["import { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker } from '../components/enum_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig } from '../components/icon_enum_picker.js';\nimport { IconPicker } from '../components/icon_picker.js';\nimport { IconPickerConfig } from '../components/icon_picker.js';\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tFireTotem,\n\tWaterTotem,\n\tShamanTotems,\n} from '../proto/shaman.js';\nimport { Spec } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { Player } from '../player.js';\nimport { Sim } from '../sim.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport * as InputHelpers from '../components/input_helpers.js';\nimport { SpecRotation, ShamanSpecs } from '../proto_utils/utils.js';\nimport { ContentBlock } from './content_block.js';\nimport { Input } from './input.js';\n\nexport function TotemsSection(parentElem: HTMLElement, simUI: IndividualSimUI<ShamanSpecs>): ContentBlock {\n\tlet contentBlock = new ContentBlock(parentElem, 'totems-settings', {\n\t\theader: {title: 'Totems'}\n\t});\n\n\tlet totemDropdownGroup = Input.newGroupContainer();\n\ttotemDropdownGroup.classList.add('totem-dropdowns-container', 'icon-group');\n\n\tlet fireElementalContainer = document.createElement('div');\n\tfireElementalContainer.classList.add('fire-elemental-inputs-container');\n\n\tcontentBlock.bodyElement.appendChild(totemDropdownGroup);\n\tcontentBlock.bodyElement.appendChild(fireElementalContainer);\n\t\n\tconst earthTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'earth-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffdfba', value: EarthTotem.NoEarthTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(58643), value: EarthTotem.StrengthOfEarthTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(58753), value: EarthTotem.StoneskinTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8143), value: EarthTotem.TremorTotem },\n\t\t],\n\t\tequals: (a: EarthTotem, b: EarthTotem) => a == b,\n\t\tzeroValue: EarthTotem.NoEarthTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.rotationChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getRotation().totems?.earth || EarthTotem.NoEarthTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newRotation = player.getRotation();\n\t\t\tif (!newRotation.totems)\n\t\t\t\tnewRotation.totems = ShamanTotems.create();\n\t\t\tnewRotation.totems!.earth = newValue;\n\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t},\n\t});\n\n\tconst waterTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'water-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#bae1ff', value: WaterTotem.NoWaterTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(58774), value: WaterTotem.ManaSpringTotem },\n\t\t],\n\t\tequals: (a: WaterTotem, b: WaterTotem) => a == b,\n\t\tzeroValue: WaterTotem.NoWaterTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.rotationChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getRotation().totems?.water || WaterTotem.NoWaterTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newRotation = player.getRotation();\n\t\t\tif (!newRotation.totems)\n\t\t\t\tnewRotation.totems = ShamanTotems.create();\n\t\t\tnewRotation.totems!.water = newValue;\n\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t},\n\t});\n\n\tconst fireTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'fire-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffb3ba', value: FireTotem.NoFireTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(58734), value: FireTotem.MagmaTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(58704), value: FireTotem.SearingTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(57722), value: FireTotem.TotemOfWrath, showWhen: (player: Player<ShamanSpecs>) => player.getTalents().totemOfWrath },\n\t\t\t{ actionId: ActionId.fromSpellId(58656), value: FireTotem.FlametongueTotem },\n\t\t],\n\t\tequals: (a: FireTotem, b: FireTotem) => a == b,\n\t\tzeroValue: FireTotem.NoFireTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.rotationChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getRotation().totems?.fire || FireTotem.NoFireTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newRotation = player.getRotation();\n\t\t\tif (!newRotation.totems)\n\t\t\t\tnewRotation.totems = ShamanTotems.create();\n\t\t\tnewRotation.totems!.fire = newValue;\n\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t},\n\t});\n\n\tconst airTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'air-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#baffc9', value: AirTotem.NoAirTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8512), value: AirTotem.WindfuryTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(3738), value: AirTotem.WrathOfAirTotem },\n\t\t],\n\t\tequals: (a: AirTotem, b: AirTotem) => a == b,\n\t\tzeroValue: AirTotem.NoAirTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.rotationChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getRotation().totems?.air || AirTotem.NoAirTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newRotation = player.getRotation();\n\t\t\tif (!newRotation.totems)\n\t\t\t\tnewRotation.totems = ShamanTotems.create();\n\t\t\tnewRotation.totems!.air = newValue;\n\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t},\n\t});\n\n\tconst fireElementalBooleanIconInput = InputHelpers.makeBooleanIconInput<ShamanSpecs, ShamanTotems, Player<ShamanSpecs>>({\n\t\tgetModObject: (player: Player<ShamanSpecs>) => player,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getRotation().totems || ShamanTotems.create(),\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: ShamanTotems) => {\n\t\t\tconst newRotation = player.getRotation();\n\t\t\tnewRotation.totems = newVal;\n\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t},\n\t\tchangeEmitter: (player: Player<Spec.SpecEnhancementShaman>) => player.rotationChangeEmitter,\n\t}, ActionId.fromSpellId(2894), \"useFireElemental\");\n\n\tnew IconPicker(fireElementalContainer, simUI.player, fireElementalBooleanIconInput);\n\n\treturn contentBlock;\n}\n"],"names":["TotemsSection","parentElem","simUI","contentBlock","ContentBlock","header","title","totemDropdownGroup","Input","newGroupContainer","classList","add","fireElementalContainer","document","createElement","bodyElement","appendChild","IconEnumPicker","player","extraCssClasses","numColumns","values","color","value","EarthTotem","NoEarthTotem","actionId","ActionId","fromSpellId","StrengthOfEarthTotem","StoneskinTotem","TremorTotem","equals","a","b","zeroValue","changedEvent","rotationChangeEmitter","getValue","getRotation","totems","earth","setValue","eventID","newValue","newRotation","ShamanTotems","create","setRotation","WaterTotem","NoWaterTotem","ManaSpringTotem","water","FireTotem","NoFireTotem","MagmaTotem","SearingTotem","TotemOfWrath","showWhen","getTalents","totemOfWrath","FlametongueTotem","fire","AirTotem","NoAirTotem","WindfuryTotem","WrathOfAirTotem","air","fireElementalBooleanIconInput","InputHelpers.makeBooleanIconInput","getModObject","newVal","changeEmitter","IconPicker"],"mappings":"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"}